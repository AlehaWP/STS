// *****************************************************************************
// Название: Экспорт Excel в ДО1
// Описание: Экспорт Excel в ДО1
// Кнопка вызова: 0
// Подпись кнопки: Экспорт Excel в ДО1
// Вызов по событию: 
// *****************************************************************************
//

VAR ('PlaceIsSelected', Integer, 0);
VAR ('vPlaceId', Integer);
VAR ('vID', Integer);
VAR ('vID_EX', string, '');
VAR ('vG32', Integer, 0);
VAR ('nGN', Integer, 0);
VAR ('nTTN', Integer, 0);
VAR ('nTTN_G32', Integer, 0);
VAR ('nCont', Integer, 0);
VAR('sListName', String);
VAR('sFileName', String);
VAR('sFilePath', String);
VAR('sSQL', String);
VAR('vG144', string);
VAR('vG142', string);
VAR('vG143', string);
VAR('vG1440', string);
VAR('dG145', DateTime);
Func('isLeapYear',
  Param('iYear', Integer, 0),
Block(
  (MOD(iYear, 4) = 0) * ((MOD(iYear, 400) = 0) | (MOD(iYear, 100) <> 0))
));

Func('DaysInMonth', Block(
  Param('sYear', String, 0),
  Param('sMonth', String, 1)
),
Block(
  Var('iYear', Integer, CONVERT (sYear, Integer));
  Var('iMonth', Integer, CONVERT (sMonth, Integer));
  CASE (iMonth,
    [1, 31,
     2, IF(isLeapYear(iYear), 29, 28),
     3, 31,
     4, 30,
     5, 31,
     6, 30,
     7, 31,
     8, 31,
     9, 30,
     10, 31,
     11, 30,
     12, 31],
    30)
));

Func('AddMonths', Block(
  Param('dtDate', DateTime, 0),
  Param('fMonths', Float, 1)
), Block(
  Var('dtResult', DateTime);

  Var('iYear', Integer, CONVERT(FORMATDATETIME ('YYYY', dtDate), Integer));
  Var('iMonth', Integer, CONVERT(FORMATDATETIME ('MM', dtDate), Integer));
  Var('iDay', Integer, CONVERT(FORMATDATETIME ('DD', dtDate), Integer));

  Var('fMonthPart', Float, 0);

  // Прибавляем целое кол-во месяцев без учета годов в общем числе месяцев
  iMonth := iMonth + MOD(TRUNC(fMonths), 12);

  // Прибавляем кол-во лет

  iYear := iYear + TRUNC(fMonths) / 12;
  //showmessage(iYear);

  // Прибавим год, если есть переход
  IF(iMonth > 12,
    Block(
      iMonth := iMonth - 12;
      iYear := iYear + 1
  ));

  // Проверяем последние числа месяца, если надо - выравниваем
  IF(iDay > DaysInMonth(Trim(iYear), Trim(iMonth)),
    iDay := DaysInMonth(Trim(iYear), Trim(iMonth))
  );

  // Прибавляем кусок месяца, если надо
  IF(CONVERT(TRUNC(fMonths), Float) < fMonths, Block(
    // Доля остатка дней до конца месяца в общем числе дней месяца
    fMonthPart := 1 - CONVERT(iDay, Float) / CONVERT(DaysInMonts(Trim(iYear), Trim(iMonth)), Float);

    // Если прибавить к дням нужно больше, чем осталось до конца месяца, прибавим месяц
    // прибавляемую долю уменьшим на остаток дней в предыдущем месяце
    IF(FRAC(fMonths) > fMonthPart, Block(
      iMonth := iMonth + 1;
      IF(iMonth > 12,
        iYear := iYear + 1
      );
      fMonthPart := FRAC(fMonths) - fMonthPart;
    ),
      fMonthPart := FRAC(fMonths)
    );
//showmessage('iDay='+iDay+CHAR(13)+'fMounthPart='+fMounthPart+CHAR(13)+'DaysinMounth='+DaysinMonth(Trim(iYear), Trim(iMonth)));
    iDay := iDay + TRUNC(fMonthPart * CONVERT(DaysinMonth(Trim(iYear), Trim(iMonth)), Float));
    IF(iDay > DaysinMonth(Trim(iYear), Trim(iMonth)),
      iDay := iDay - DaysinMonth(Trim(iYear), Trim(iMonth))
    );
  ));
//if(imonth <= 2 , iYear := iYear + 1);
  ENCODEDATE(iYear, iMonth, iDay)
));



showmessage(AddMonths(NOW() + 1, 2));
