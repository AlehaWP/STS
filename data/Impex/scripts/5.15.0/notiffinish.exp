// *****************************************************************************
// Название: Создать решение по требованию
// Описание: Создать решение по требованию
// Кнопка вызова: 0
// Подпись кнопки: Создать решение по требованию
// Вызов по событию:
// *****************************************************************************
//

FUNC ('CreateXML', ,
  Block(
    VAR ('XMLDoc', Integer, XMLDocumentCreate());
    XMLDOCUMENTENCODING (XMLDoc, sXmlDocEncoding);
    VAR ('XMLDocRoot', Integer, XMLDocumentRoot(XMLDoc));
    VAR ('XMLNfRejOper', Integer, XMLNodeAddChild(XMLDocRoot, 'nfro:NotifFinishRejectOperations'));

//АТТРИБУТЫ ДОБАВЛЕНЫ, ЧТОБЫ XML-ФАЙЛ ОТКРЫВАЛСЯ В IE И КПС (НАЧАЛО)
    XmlNodeSetAttribute (XMLNfRejOper, 'xmlns:cat_ru', 'urn:customs.ru:CommonAggregateTypes:5.10.0');
    XmlNodeSetAttribute (XMLNfRejOper, 'xmlns:nfro', 'urn:customs.ru:Information:CustomsDocuments:NotifFinishRejectOperations:5.10.0');
//АТТРИБУТЫ ДОБАВЛЕНЫ, ЧТОБЫ XML-ФАЙЛ ОТКРЫВАЛСЯ В IE И КПС (КОНЕЦ)

    //XmlNodeSetAttribute (XMLNfRejOper, 'xsi:schemaLocation', 'urn:customs.ru:Information:CustomsDocuments:NotifFinishRejectOperations:5.10.0 NotifFinishRejectOperations.xsd');
    //XmlNodeSetAttribute (XMLNfRejOper, 'xmlns:xsi', 'http://www.w3.org/2001/XMLSchema-instance');
    XmlNodeSetAttribute (XMLNfRejOper, 'DocumentModeID', '1006176E');
    //XmlNodeSetAttribute (XMLDO3Report, 'cat_ru:RefDocumentID', JRDO3.RefDocumentId);
    XMLNODESETVALUES (XMLNfRejOper, '',
				    'cat_ru:DocumentID', GENERATEUUID (1),
				    'cat_ru:RefDocumentID', JR_OPERATIONS.DocumentId
    ); // XMLNODESETVALUES - //

  )
), // FUNC - CreateXML() //





FUNC ('FillXML', ,
  Block(
    //-------------------------------------------Заносим данные-------------------------------------------------------------------------------------------------------------
    XMLNODESETVALUES (XMLNfRejOper, '',
                      'nfro:DocumentSign', IF(JR_OPERATIONS.DOCUMENTSIGN='Выполнено', 'true', false)
    );

    VAR('iOperationDescription', integer);

    //Транспортировка
    IF ((JR_OPERATIONS.TranspValue=1)*(JR_OPERATIONS.TRANSPDECISION='Отказ'),
        BLOCK(
              iOperationDescription := XMLNODEADDCHILD (XMLNfRejOper, 'nfro:OperationDescription');
              XMLNODESETVALUE (iOperationDescription, 1);
        )
    );

    //Взвешивание
    IF ((JR_OPERATIONS.WEIGHINGVALUE=1)*(JR_OPERATIONS.WEIGHINGDECISION='Отказ'),
        BLOCK(
              iOperationDescription := XMLNODEADDCHILD (XMLNfRejOper, 'nfro:OperationDescription');
              XMLNODESETVALUE (iOperationDescription, 2);
        )
    );

    //Иное определение кол-ва
    IF ((JR_OPERATIONS.DEFQUANTVALUE=1)*(JR_OPERATIONS.DEFQUANTDECISION='Отказ'),
        BLOCK(
              iOperationDescription := XMLNODEADDCHILD (XMLNfRejOper, 'nfro:OperationDescription');
              XMLNODESETVALUE (iOperationDescription, 3);
        )
    );

    //Погрузка
    IF ((JR_OPERATIONS.LOADINGVALUE=1)*(JR_OPERATIONS.LOADINGDECISION='Отказ'),
        BLOCK(
              iOperationDescription := XMLNODEADDCHILD (XMLNfRejOper, 'nfro:OperationDescription');
              XMLNODESETVALUE (iOperationDescription, 4);
        )
    );

    //Выгрузка
    IF ((JR_OPERATIONS.UNLOADINGVALUE=1)*(JR_OPERATIONS.UNLOADINGDECISION='Отказ'),
        BLOCK(
              iOperationDescription := XMLNODEADDCHILD (XMLNfRejOper, 'nfro:OperationDescription');
              XMLNODESETVALUE (iOperationDescription, 5);
        )
    );

    //Перегрузка
    IF ((JR_OPERATIONS.OVERLOADINGVALUE=1)*(JR_OPERATIONS.OVERLOADINGDECISION='Отказ'),
        BLOCK(
              iOperationDescription := XMLNODEADDCHILD (XMLNfRejOper, 'nfro:OperationDescription');
              XMLNODESETVALUE (iOperationDescription, 6);
        )
    );

    //Исправление поврежденной упаковки
    IF ((JR_OPERATIONS.CorrPackValue=1)*(JR_OPERATIONS.CORRPACKDECISION='Отказ'),
        BLOCK(
              iOperationDescription := XMLNODEADDCHILD (XMLNfRejOper, 'nfro:OperationDescription');
              XMLNODESETVALUE (iOperationDescription, 7);
        )
    );

    //Вскрытие упаковки
    IF ((JR_OPERATIONS.UNPACKINGVALUE=1)*(JR_OPERATIONS.UNPACKINGDECISION='Отказ'),
        BLOCK(
              iOperationDescription := XMLNODEADDCHILD (XMLNfRejOper, 'nfro:OperationDescription');
              XMLNODESETVALUE (iOperationDescription, 8);
        )
    );

    //Упаковка
    IF ((JR_OPERATIONS.PACKINGVALUE=1)*(JR_OPERATIONS.PACKINGDECISION='Отказ'),
        BLOCK(
              iOperationDescription := XMLNODEADDCHILD (XMLNfRejOper, 'nfro:OperationDescription');
              XMLNODESETVALUE (iOperationDescription, 9);
        )
    );

    //Переупаковка
    IF ((JR_OPERATIONS.REPACKINGVALUE=1)*(JR_OPERATIONS.REPACKINGDECISION='Отказ'),
        BLOCK(
              iOperationDescription := XMLNODEADDCHILD (XMLNfRejOper, 'nfro:OperationDescription');
              XMLNODESETVALUE (iOperationDescription, 10);
        )
    );

    //Вскрытие пом.
    IF ((JR_OPERATIONS.OLG_VALUE=1)*(JR_OPERATIONS.OLG_DECISION='Отказ'),
        BLOCK(
              iOperationDescription := XMLNODEADDCHILD (XMLNfRejOper, 'nfro:OperationDescription');
              XMLNODESETVALUE (iOperationDescription, 11);
        )
    );

    //Разделение тов. партии
    IF ((JR_OPERATIONS.DIVISIONVALUE=1)*(JR_OPERATIONS.DIVISIONDECISION='Отказ'),
        BLOCK(
              iOperationDescription := XMLNODEADDCHILD (XMLNfRejOper, 'nfro:OperationDescription');
              XMLNODESETVALUE (iOperationDescription, 12);
        )
    );

    // ГТД нумбер стал необязательным
    IF(JR_OPERATIONS.GTDNumber<>'', Block(

      VAR('sDTdate', string, '');

      sDTDate := EXTRACTSTR (JR_OPERATIONS.GTDNumber, 2, '/');

      sDTDate := '20'+ COPY(sDTDate, 5, 2) + '-' + COPY(sDTDate, 3, 2) + '-' + COPY(sDTDate, 1, 2);

      XMLNODESETVALUES (XMLNfRejOper, 'nfro:GTDNumber',
                      'cat_ru:CustomsCode', EXTRACTSTR (JR_OPERATIONS.GTDNumber, 1, '/'),
                      'cat_ru:RegistrationDate', sDTDate,
                      'cat_ru:GTDNumber', EXTRACTSTR (JR_OPERATIONS.GTDNumber, 3, '/')
      );
    ));

    VAR('iDeclarant', integer, XMLNODEADDCHILD (XMLNfRejOper, 'nfro:Declarant'));
    IF(JR_OPERATIONS.DeclOrgName<>'', XMLNODESETVALUES (iDeclarant, '','cat_ru:OrganizationName',JR_OPERATIONS.DeclOrgName));

    IF(JR_OPERATIONS.DeclINN<>'', XMLNODESETVALUES (iDeclarant, 'cat_ru:RFOrganizationFeatures','cat_ru:INN',JR_OPERATIONS.DeclINN));

    IF(JR_OPERATIONS.ReprOrgName<>'',
      BLOCK(
          VAR('iRepr', integer, XMLNODEADDCHILD(iDeclarant, 'nfro:Representative'));
          XMLNODESETVALUES (iRepr, '','cat_ru:OrganizationName',JR_OPERATIONS.ReprOrgName);
          IF(JR_OPERATIONS.ReprINN<>'', XMLNODESETVALUES (iRepr, 'cat_ru:RFOrganizationFeatures','cat_ru:INN',JR_OPERATIONS.ReprINN));

      )
    );



    VAR('iCustomsOffice', integer, XMLNODEADDCHILD (XMLNfRejOper, 'nfro:CustomsOffice'));


    XMLNODESETVALUES (iCustomsOffice, '','cat_ru:Code',JR_OPERATIONS.CustomsCode);

    IF(JR_OPERATIONS.CustomsOfficeName<>'', XMLNODESETVALUES (iCustomsOffice, '','cat_ru:OfficeName',JR_OPERATIONS.CustomsOfficeName));
    IF(JR_OPERATIONS.CustomsCountryCode<>'', XMLNODESETVALUES (iCustomsOffice, '','cat_ru:CustomsCountryCode',JR_OPERATIONS.CustomsCountryCode));
  )
), // FUNC -'FillXML'
//----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



FUNC ('SaveXML', ,
  Block(
    //Записываем в темп для проверки на валидность
    VAR ('sTempDir', String, INCLUDETRAILINGBACKSLASH (TEMPDIRECTORY ()) + 'STS-MED\');
    IF (DIRECTORYEXISTS (sTempDir) = 0, FORCEDIRECTORIES (sTempDir));

    VAR ('sTmpFileName', String, INCLUDETRAILINGBACKSLASH (sTempDir) + 'NotifFinishRejectOperations_'+vPlaceID+'_'+vDocID+'.xml');
    XMLDocumentSaveToFile(XMLDoc, sTmpFileName);
    sTmpFileName
  )
),
//--------------------------------------------

FUNC ('GetNotifFinishExpXml',   
  Block (
    Param ('pPlaceID', string, 0);
    Param ('pDocID', string, 1);
  ),
  Block (
    vPlaceID := pPlaceID;
    vDocID := pDocID;

    CreateXML ();
    FillXML ();
    SaveXML ()
  )    
),

VAR ('vPlaceID', string, '');
VAR ('vDocID', string, '');

