// *****************************************************************************
// Название: Импорт представления документов  в формате СВХ.Альбом
// Описание: Импорт представления документов в формате СВХ.Альбом
// Кнопка вызова: 1
// Подпись кнопки: Представление.Альбом(ИМ)
// *****************************************************************************
//
VAR ('sLogFile', String, INCLUDETRAILINGBACKSLASH(PROGRAMPATH()) + 'rwhd.log');
CREATELOGFILE (sLogFile, 0);

VAR ('Report', Integer, GetCurrentReportNode());
VAR ('iDocPlaceID', Integer, DocPlaceID());
VAR ('bImportDoc', Boolean, ImportMode() = 'ImportDoc');
VAR ('bCreateDoc', Boolean, bImportDoc | (ImportMode() = 'CreateDoc'));
VAR ('bImportData', Boolean, False);
VAR ('iMainID', Integer, 0);
VAR ('vPlaceID', String);
VAR ('vID', String);
VAR ('strTemp', String); 
VAR ('tmpGrossNumber', String);
VAR ('tmpTrimGrossNumber', String);
VAR ('iContainerOrderNo', Integer, 1);
VAR ('iGoodOrderNo', Integer, 1);
VAR ('bFirstTD', Integer, 0);

OPENTABLE ('KRD_MAIN_3', 'STS_DB', 'KRD_MAIN', 'PLACEID;ID');
OPENTABLE ('KRD_COMM_3', 'STS_DB', 'KRD_COMM', 'PLACEID;ID');
OPENTABLE ('KRD_PAPERS_3', 'STS_DB', 'KR_PAPER', 'PLACEID;ID');  
OPENTABLE ('PAPERS_3', 'STS_DB', 'PAPERS', 'PAPERNAME');
OPENTABLE ('KR_C_P_3', 'STS_DB', 'KR_C_P', 'PLACEID;ID');
OPENTABLE ('KRD_CONT_3', 'STS_DB', 'KRD_CONT', 'PLACEID;ID');
OPENTABLE ('KR_TRANS_3', 'STS_DB', 'KR_TRANS', 'PLACEID;ID');

FUNC ('ImportTTN', '',
  Block(
    APPENDLOGFILE (sLogFile, 'ТОВАРОСОПРОВОДИТЕЛЬНЫЙ ДОКУМЕНТ | ' + XmlNodeName (Bill));
    iBillN_TTN := iBillN_TTN + 1;
    IF (LOCATE ('PAPERS_3', 'PAPER_DOCG44_CODE', [Bill.PresentedDocumentModeCode]),
      strTemp := REFERENCE ('PAPERS', 'PAPER_DOCG44_CODE', Bill.PresentedDocumentModeCode, 'PAPERNAME'),
      IF (LOCATE ('PAPERS_3', 'PAPERNAME', [Bill.PrDocumentName]),
        strTemp := Bill.PrDocumentName,
        strTemp := REFERENCE ('PAPERS', 'PAPERFULLNAME', Bill.PrDocumentName, 'PAPERNAME')
    ));
    IF (STRPOS (Bill.PresentedDocumentModeCode+strTemp + Bill.PrDocumentNumber + Bill.PrDocumentDate, wTransportDoc) = 0, Block(
      IF (wTransportDoc <> '', wTransportDoc := wTransportDoc + '|');
      wTransportDoc := wTransportDoc + Bill.PresentedDocumentModeCode+strTemp + Bill.PrDocumentNumber+Bill.PrDocumentDate;
      AppendRecord ('KRD_PAPERS');
      SetFieldValue ('KRD_PAPERS',
                     'PAPERCODE', Bill.PresentedDocumentModeCode,
                     'PAPERNAME', strTemp,
                     'PAPERDATE', StrToDate (Bill.PrDocumentDate, 'YYYY-MM-DD', '-'),
                     'PAPERNO',   Bill.PrDocumentNumber,
                     'PAPER_REG_NO',
                        IF (TRIM (Bill.CustomNumber.CustomsCode) <> '',
                              Bill.CustomNumber.CustomsCode + '/' +
                              FDT ('DDMMYY', StrToDate (Bill.CustomNumber.RegistrationDate, 'YYYY-MM-DD', '-')) + '/' +
                              Bill.CustomNumber.GTDNumber + '/' + Bill.CustomNumber.WaybillNumPP
                        )
      );
      PostRecord ('KRD_PAPERS');
      IF ((iBillN_TTN = 0), bFirstTD := 1, bFirstTD := 0);
    ))
  )
),

FUNC ('IsMultiPartReport', Block(
  PARAM ('aByRecipient', String, 0),
  PARAM ('aByTsDoc', String, 1),
  ),
  Block (
    APPENDLOGFILE (sLogFile, '=== ФУНКЦИЯ IsMultiPartReport');
    VAR ('XmlGoodsShipment', Integer, XMLNodeFind (Report, 'GoodsShipment'));
    VAR ('bByRecipient', Boolean);
    VAR ('bByDate', Boolean);
    VAR ('bByTsDoc', Boolean);
    VAR ('bChanged', Boolean, 0);
    IF (XmlGoodsShipment,
      Block (
        VAR ('iBillCount', Integer, XMLNodeChildCount (Report));
        IF (iBillCount > 0,
          Block (
            VAR ('iBillIndex', Integer, 0);
            VAR ('iBillIndex2', Integer, 0);
            VAR ('sRecipient', String, '');
            VAR ('sTsDoc', String, '');
	          VAR ('sDate', DateTime);
            VAR ('Bill', Integer);
            
            WHILE ((iBillIndex < iBillCount) & (bChanged = 0),
              block (
                Bill := XmlNodeChild (Report, iBillIndex);
                IF (XMLNODENAME (Bill) = 'rwhd:GoodsShipment', Block(
                  sPaperCode := Bill.PresentedDocumentModeCode;
  	          //IF (Length(sPaperCode) = 5, sPaperCode := Right(sPaperCode, 4));// времянка, использовали при отсутствии справочника 5-значных кодов
                  IF (iBillIndex2 = 0,
                    Block (
                      sRecipient := Bill.Consignee.OrganizationName;
                      IF (LOCATE('PAPERS_3', 'PAPER_DOCG44_CODE', [sPaperCode]),
                        strTemp := REFERENCE ('PAPERS', 'PAPER_DOCG44_CODE', sPaperCode, 'PAPERNAME'),
                        IF (LOCATE ('PAPERS_3', 'PAPERNAME', [Bill.PrDocumentName]),
                          strTemp := Bill.PrDocumentName,
                          strTemp := REFERENCE ('PAPERS', 'PAPERFULLNAME', Bill.PrDocumentName, 'PAPERNAME')
                      ));
                      sTsDoc := sPaperCode + '|' + strTemp + '|' + Bill.PrDocumentDate + '|' + Bill.PrDocumentNumber;
  		      sDate := StrToDate (Report.ReportDate, 'YYYY-MM-DD', '-') + IF (TRIM (Report.ReportTime) <> '', ' ' +  Report.ReportTime, FRAC (KRD_MAIN.G542));  		      
                      IF (INIFILE ('XMLKPS', 'LoadIgnoreRecipient', '0') = '1',
                        bByRecipient := False,
                        bByRecipient := sRecipient <> ''
                      );
                      bByTsDoc := (sTSDoc <> '') & (STRPOS (Report.MainTransportModeCode, '20|23|30|31|39') = 0);
                    ),
                    Block(
                      IF (bByRecipient, bChanged := sRecipient <> Bill.Consignee.OrganizationName);
                      IF (LOCATE('PAPERS_3', 'PAPER_DOCG44_CODE', [sPaperCode]),
                        strTemp := REFERENCE ('PAPERS', 'PAPER_DOCG44_CODE', sPaperCode, 'PAPERNAME'),
                        IF (LOCATE ('PAPERS_3', 'PAPERNAME', [Bill.PrDocumentName]),
                          strTemp := Bill.PrDocumentName,
                          strTemp := REFERENCE ('PAPERS', 'PAPERFULLNAME', Bill.PrDocumentName, 'PAPERNAME')
                      ));
  		                IF ((bChanged = 0) & bByTsDoc, bChanged := sTsDoc <> sPaperCode + '|' + strTemp + '|' + Bill.PrDocumentDate + '|' + Bill.PrDocumentNumber),
                      IF (XmlNodeFind (Bill, 'Goods') = 0, bChanged := 0);
                      IF (INIFILE ('XMLKPS', 'DO1LoadAll', '0') = '1', bByTsDoc := False);
                    )
  		            );// end if(iBillIndex = 0
  		            iBillIndex2 := iBillIndex2 + 1; // реальный номер ТТН по порядку (в Shipmente еще и другие документы)
  		          )), // end If(XMLNODENAME (Bill) = 'rwhd:GoodsShipment'
                iBillIndex := iBillIndex + 1;    
              )
            )    
          )
        )
      )
    ),
    LET (aByRecipient, bByRecipient);
    LET (aByTsDoc, bByTsDoc);
    bChanged
  )
),    

FUNC ('ImportKrdMain', ,
  Block (
    APPENDLOGFILE (sLogFile, '=== ФУНКЦИЯ ImportKrdMain');
    VAR ('iPlaceId', Integer, 0);
    VAR ('iId', Integer, 0);
    VAR ('bFound', Boolean, 0);
    VAR ('sFilterCrit', String, '');
    VAR ('XMLCustomRegistration', Integer);
    VAR ('sTransport', String);
    VAR ('iTransp', Integer, 0);
    IF (bByTsDoc, Block(
      IF (LOCATE ('PAPERS_3', 'PAPER_DOCG44_CODE', [sPaperCode]),
        strTemp := REFERENCE ('PAPERS', 'PAPER_DOCG44_CODE', sPaperCode, 'PAPERNAME'),
        IF (LOCATE ('PAPERS_3', 'PAPERNAME', [Bill.PrDocumentName]),
          strTemp := Bill.PrDocumentName,
          strTemp := REFERENCE ('PAPERS', 'PAPERFULLNAME', Bill.PrDocumentName, 'PAPERNAME')
      ));
      sFilterCrit := 'PLACEID = ' + CONVERT (iDocPlaceID, String) + ' AND PAPERCODE = ' + CHAR(39) + sPaperCode + CHAR(39) +
                        ' AND PAPERNO = ' + CHAR(39) + Bill.PrDocumentNumber + CHAR(39) + ' AND PAPERNAME = ' + CHAR(39) + strTemp + CHAR(39);

      IF (XmlNodeFind (Bill, 'PrDocumentDate') & (Bill.PrDocumentDate <> ''),
        sFilterCrit := sFilterCrit + ' AND PAPERDATE = ' + FDT ('DD.MM.YYYY', StrToDate (Bill.PrDocumentDate, 'YYYY-MM-DD', '-'))
      );
      //Проверим, есть ли такой документ в базе
      SETFILTER ('KRD_PAPERS_3', sFilterCrit);
      FIRST ('KRD_PAPERS_3');
      WHILE (EOF ('KRD_PAPERS_3') = 0, Block(
        tmpGrossNumber := Report.CustomRegistration.RegisterNumber.CustomsCode+'/'+FDT ('DDMMYYYY', StrToDate (Report.ReportDate, 'YYYY-MM-DD', '-'))+'/'+Report.ReportNumber;
        tmpTrimGrossNumber := Report.CustomRegistration.RegisterNumber.CustomsCode+'/'+FDT ('DDMMYYYY', StrToDate (Report.ReportDate, 'YYYY-MM-DD', '-'))+'/'+TrimLeft (Report.ReportNumber, ['0']);
        IF (bFound = 0,
          IF (bByRecipient,
            Block(
              bFound := (LOCATE ('KRD_MAIN_3', 'PLACEID;ID;NU;G082;G542', [KRD_PAPERS_3.PLACEID, KRD_PAPERS_3.ID, Report.ReportNumber, Bill.Consignee.OrganizationName, sDate])|
                         LOCATE ('KRD_MAIN_3', 'PLACEID;ID;NU;G082;G542', [KRD_PAPERS_3.PLACEID, KRD_PAPERS_3.ID, TrimLeft (Report.ReportNumber, ['0']), Bill.Consignee.OrganizationName, sDate]));
              IF (bFound = 0,
                bFound := (LOCATE ('KRD_MAIN_3', 'PLACEID;ID;NU;G082;G542', [KRD_PAPERS_3.PLACEID, KRD_PAPERS_3.ID, tmpGrossNumber, Bill.Consignee.OrganizationName, sDate])|
                           LOCATE ('KRD_MAIN_3', 'PLACEID;ID;NU;G082;G542', [KRD_PAPERS_3.PLACEID, KRD_PAPERS_3.ID, tmpTrimGrossNumber, Bill.Consignee.OrganizationName, sDate]))
              );
            ),
            Block(
              bFound := (LOCATE ('KRD_MAIN_3', 'PLACEID;ID;NU;G542', [KRD_PAPERS_3.PLACEID, KRD_PAPERS_3.ID, Report.ReportNumber, sDate])|
                         LOCATE ('KRD_MAIN_3', 'PLACEID;ID;NU;G542', [KRD_PAPERS_3.PLACEID, KRD_PAPERS_3.ID, TrimLeft (Report.ReportNumber, ['0']), sDate]));
              IF (bFound = 0,
                bFound := (LOCATE ('KRD_MAIN_3', 'PLACEID;ID;NU;G542', [KRD_PAPERS_3.PLACEID, KRD_PAPERS_3.ID, tmpGrossNumber, sDate])|
                           LOCATE ('KRD_MAIN_3', 'PLACEID;ID;NU;G542', [KRD_PAPERS_3.PLACEID, KRD_PAPERS_3.ID, tmpTrimGrossNumber, sDate]))
              );
            )
          );
        );
        NEXT ('KRD_PAPERS_3');
      ));
      SETFILTER ('KRD_PAPERS_3', '');
    ),
    Block(
      tmpGrossNumber := Report.CustomRegistration.RegisterNumber.CustomsCode+'/'+FDT ('DDMMYYYY', StrToDate (Report.ReportDate, 'YYYY-MM-DD', '-'))+'/'+Report.ReportNumber;
      tmpTrimGrossNumber := Report.CustomRegistration.RegisterNumber.CustomsCode+'/'+FDT ('DDMMYYYY', StrToDate (Report.ReportDate, 'YYYY-MM-DD', '-'))+'/'+TrimLeft (Report.ReportNumber, ['0']);
      IF (bByRecipient,
        Block(
          bFound := (LOCATE ('KRD_MAIN_3', 'PLACEID;NU;G082;G542', [iDocPlaceID, Report.ReportNumber, Bill.Consignee.OrganizationName, sDate])|
                     LOCATE ('KRD_MAIN_3', 'PLACEID;NU;G082;G542', [iDocPlaceID, TrimLeft (Report.ReportNumber, ['0']), Bill.Consignee.OrganizationName, sDate]));
          IF (bFound = 0,
            bFound := (LOCATE ('KRD_MAIN_3', 'PLACEID;NU;G082;G542', [iDocPlaceID, tmpGrossNumber, Bill.Consignee.OrganizationName, sDate])|
                       LOCATE ('KRD_MAIN_3', 'PLACEID;NU;G082;G542', [iDocPlaceID, tmpTrimGrossNumber, Bill.Consignee.OrganizationName, sDate]))
          );
        ),
        Block(
          bFound := (LOCATE ('KRD_MAIN_3', 'PLACEID;NU;G542', [iDocPlaceID, Report.ReportNumber, sDate])|
                     LOCATE ('KRD_MAIN_3', 'PLACEID;NU;G542', [iDocPlaceID, TrimLeft (Report.ReportNumber, ['0']), sDate]));
          IF (bFound = 0,
            bFound := (LOCATE ('KRD_MAIN_3', 'PLACEID;NU;G542', [iDocPlaceID, tmpGrossNumber, sDate])|
                       LOCATE ('KRD_MAIN_3', 'PLACEID;NU;G542', [iDocPlaceID, tmpTrimGrossNumber, sDate]))
          );
        )
      );
    ));

    IF (bFound = 1,
      IF (INIFILE ('XMLKPS', 'DO1LoadAll', '0') = '1',
        Block(
          SETFILTER ('KRD_COMM_3','PLACEID='+FIELDVALUE ('KRD_MAIN_3','PLACEID')+' AND ID='+FIELDVALUE ('KRD_MAIN_3','ID'));
          IF (RECORDCOUNT ('KRD_COMM_3') <> 0,
            Block(
              DELETERECORDS ('KRD_COMM_3');
              POST ('KRD_COMM_3');
            )
          );
          SETFILTER ('KRD_COMM_3', '');
          SETFILTER ('KRD_PAPERS_3','PLACEID='+FIELDVALUE ('KRD_MAIN_3','PLACEID')+' AND ID='+FIELDVALUE ('KRD_MAIN_3','ID'));
          IF (RECORDCOUNT ('KRD_PAPERS_3') <> 0,
            Block(
              DELETERECORDS ('KRD_PAPERS_3');
              POST ('KRD_PAPERS_3');
            )
          );
          SETFILTER ('KRD_PAPERS_3', '');
          SETFILTER ('KR_C_P_3','PLACEID='+FIELDVALUE ('KRD_MAIN_3','PLACEID')+' AND ID='+FIELDVALUE('KRD_MAIN_3','ID'));
          IF (RECORDCOUNT ( 'KR_C_P_3') <> 0,
            Block(
              DELETERECORDS ('KR_C_P_3');
              POST ('KR_C_P_3');
            )
          );
          SETFILTER ('KR_C_P_3', '');
          // загружать ли информацию о контейнерах или оставлять старые? в XML нет информации о пломбах, и если загружать контейнера из файла, то теряем пломбы
          IF (INIFILE ('XMLKPS', 'DO1LoadContAll', '0') = '1',
          Block(
            SETFILTER ('KRD_CONT_3','PLACEID='+FIELDVALUE ('KRD_MAIN_3','PLACEID')+' AND ID='+FIELDVALUE ('KRD_MAIN_3','ID'));
            IF  (RECORDCOUNT ('KRD_CONT_3') <> 0,
              Block(
                DELETERECORDS ('KRD_CONT_3');
                POST ('KRD_CONT_3');
              )
            );
          ));
          SETFILTER ('KRD_CONT_3', '');
          SETFILTER ('KR_TRANS_3','PLACEID='+FIELDVALUE ('KRD_MAIN_3','PLACEID')+' AND ID='+FIELDVALUE ('KRD_MAIN_3','ID'));
          IF (RECORDCOUNT ('KR_TRANS_3') <> 0,
            Block(
              DELETERECORDS ('KR_TRANS_3');
              POST ('KR_TRANS_3');
            )
          );
          SETFILTER ('KR_TRANS_3', '');
        )
      )
    );
    IF ((bCreateDoc = False) & bFound,
      Block(
        IF (FINDKEY ( 'KRD_MAIN_3', [iDocPlaceID, KRD_MAIN_3.ID]) & FINDKEY ('KRD_MAIN', [KRD_MAIN_3.SHOW_NBD, KRD_MAIN_3.PLACEID, KRD_MAIN_3.ID]), ,
          RaiseException ('Внутренняя ошибка - Документ отчета не найден')
        );    
        iMainID := KRD_MAIN.MAIN_ID;          
        CASE (OverwriteMode(), [
           0, bImportData := True, 
           1, Block(
                bImportData := KRD_MAIN.MC_STATUS_BD <> '3';
                IF (bImportData = False, SetCurItemStatus('4'));
              ),    
           2, Block(
                bImportData := False;
                SetCurItemStatus('7')  
              )]
        );
        EditRecord ('KRD_MAIN');
      ),    
      Block(
        IF (bImportDoc,
          Block(
            bImportDoc := False;
            EditRecord ('KRD_MAIN');    
          ),    
          AppendRecord ('KRD_MAIN');
        ),    
        if (bCreateDoc = 0,
          block (
            SetFieldValue ('KRD_MAIN', 'PLACEID', iDocPlaceID, 
				       'ID', GetNewKrdMainID(iDocPlaceID));    
            IF(STRPOS(Report.MainTransportModeCode, '10|12|16|40|43') <> 0,
              SetFieldValue ('KRD_MAIN', 'MAIN_ID', KRD_MAIN.ID, 'A_MODE', 7),  
              SetFieldValue ('KRD_MAIN', 'MAIN_ID', KRD_MAIN.ID, 'A_MODE', 6)
            );
            SetIsNewDoc()    
          )  
        ),  
        IF (bMultiPart,
          Block (
            SetFieldValue ('KRD_MAIN', 'PART_NO', GetNewKrdMainPartNo (KRD_MAIN.PLACEID, KRD_MAIN.MAIN_ID),
                          	           'PART_MODE', 1,
				                               'A_MODE', 7);
          )
        ),
        bImportData := True;  
      )    
    ); 
 
    IF (KRD_MAIN.A_MODE = 7, Block(
      dSumG311 := 0;
      dSumG35 := 0;
      dSumG315C := 0;
      dSumG42 := 0
    ));
    //ShowMessage(bImportData);
    IF (bImportData,
      Block ( 
        vPlaceID := FIELDVALUE ('KRD_MAIN', 'PLACEID');
        vID := FIELDVALUE ('KRD_MAIN', 'ID');
        SetFieldValue ('KRD_MAIN',
           'NU',  Report.ReportNumber,
           //'G542', StrToDate (Report.ReportDate, 'YYYY-MM-DD', '-') + IF (TRIM (Report.ReportTime) <> '', ' ' +  Report.ReportTime, FRAC (KRD_MAIN.G542)),
           //'BEG_KEEP', IF (FIELDISNULL ('KRD_MAIN', 'BEG_KEEP'), StrToDate (Report.ReportDate, 'YYYY-MM-DD', '-') + IF (TRIM (Report.ReportTime) <> '', ' ' +  Report.ReportTime, FRAC (KRD_MAIN.BEG_KEEP)),KRD_MAIN.BEG_KEEP),
           'G042', IF (TRIM (Report.Carrier.OrganizationName) <> '', Report.Carrier.OrganizationName, KRD_MAIN.G042),
           'G043', IF (TRIM (Report.Carrier.Address.AddressLine) <> '', Report.Carrier.Address.AddressLine, KRD_MAIN.G043),
           'G04_OGRN', IF (TRIM (Report.Carrier.RFOrganizationFeatures.OGRN) <> '', Report.Carrier.RFOrganizationFeatures.OGRN, KRD_MAIN.G04_OGRN),
           'G044C', IF (TRIM (Report.Carrier.RFOrganizationFeatures.INN) <> '', Report.Carrier.RFOrganizationFeatures.INN, KRD_MAIN.G044C),
           'G04_KPP', IF (TRIM (Report.Carrier.RFOrganizationFeatures.KPP) <> '', Report.Carrier.RFOrganizationFeatures.KPP, KRD_MAIN.G04_KPP),
           'G04_COUNTRY', IF (TRIM (Report.Carrier.CountryCode) <> '', Report.Carrier.CountryCode, KRD_MAIN.G04_COUNTRY),
           'G040',  IF ((TRIM (Report.Carrier.CarrierPerson.PersonName) <> '')|(TRIM (Report.Carrier.CarrierPerson.PersonSurname) <> '')|(TRIM (Report.Carrier.CarrierPerson.PersonMiddleName) <> ''), TRIM(Report.Carrier.CarrierPerson.PersonSurname + ' ' + Report.Carrier.CarrierPerson.PersonName + ' ' + Report.Carrier.CarrierPerson.PersonMiddleName), KRD_MAIN.G040),
           'G040P', IF (TRIM (Report.Carrier.CarrierPerson.PersonPost) <> '', Report.Carrier.CarrierPerson.PersonPost, KRD_MAIN.G040P),
           'G142', IF (TRIM (Report.WarehouseOwner.OrganizationName) <> '', Report.WarehouseOwner.OrganizationName, KRD_MAIN.G142),
           'G143', IF (TRIM (Report.WarehouseOwner.Address.AddressLine) <> '', Report.WarehouseOwner.Address.AddressLine, KRD_MAIN.G143),
           'G144', IF (TRIM (Report.WarehouseOwner.WarehouseLicense.CertificateNumber) <> '', Report.WarehouseOwner.WarehouseLicense.CertificateNumber, KRD_MAIN.G144),
           'G145', IF (TRIM (Report.WarehouseOwner.WarehouseLicense.CertificateDate) <> '', Report.WarehouseOwner.WarehouseLicense.CertificateDate, KRD_MAIN.G145),
           'G032', IF (TRIM (Report.OverallSheetsCount) <> '', Report.OverallSheetsCount),
           'G1440', CASE (Report.WarehouseOwner.WarehouseLicense.CertificateKind, ['lic_Certificate', '1',
						                                                                       'lic_Licence', '2',
						                                                                       'lic_Permition', '3',
					                                                                         'lic_PermZtk', '4',
						                                                                       'lic_TempZtk', '5'], '1'),
           'AUTHOR',IF ((TRIM (Report.WarehouseOwner.WarehousePerson.PersonName) <> '')|(TRIM (Report.WarehouseOwner.WarehousePerson.PersonSurname) <> '')|(TRIM (Report.WarehouseOwner.WarehousePerson.PersonMiddleName) <> ''), TRIM(Report.WarehouseOwner.WarehousePerson.PersonSurname + ' ' + Report.WarehouseOwner.WarehousePerson.PersonName + ' ' + Report.WarehouseOwner.WarehousePerson.PersonMiddleName), KRD_MAIN.AUTHOR),
	         'AUTHOR_POST', IF (TRIM (Report.WarehouseOwner.WarehousePerson.PersonPost) <> '', Report.WarehouseOwner.WarehousePerson.PersonPost, KRD_MAIN.AUTHOR_POST),
           'G261', IF (TRIM (Report.MainTransportModeCode) <> '', Report.MainTransportModeCode, KRD_MAIN.G261),
           'G022', IF (TRIM (Bill.Consignor.OrganizationName) <> '', Bill.Consignor.OrganizationName, KRD_MAIN.G022),
           'G023', IF (TRIM (Bill.Consignor.Address.AddressLine) <> '', Bill.Consignor.Address.AddressLine, KRD_MAIN.G023),
           'G15A', IF (TRIM (Bill.Consignor.CountryCode) <> '', Bill.Consignor.CountryCode, KRD_MAIN.G15A),
           'G082', IF (TRIM (Bill.Consignee.OrganizationName) <> '', Bill.Consignee.OrganizationName, KRD_MAIN.G082),
           'G083', IF (TRIM (Bill.Consignee.Address.AddressLine) <> '', Bill.Consignee.Address.AddressLine, KRD_MAIN.G083),
           'G08_OGRN', IF (TRIM (Bill.Consignee.RFOrganizationFeatures.OGRN) <> '', Bill.Consignee.RFOrganizationFeatures.OGRN, KRD_MAIN.G08_OGRN),
           'G084C', IF (TRIM (Bill.Consignee.RFOrganizationFeatures.INN) <> '', Bill.Consignee.RFOrganizationFeatures.INN, KRD_MAIN.G084C),
           'G08_KPP', IF (TRIM (Bill.Consignee.RFOrganizationFeatures.KPP) <> '', Bill.Consignee.RFOrganizationFeatures.KPP, KRD_MAIN.G08_KPP),
           'G08_DOC_KIND', IF (TRIM (Bill.Consignee.IdentityCard.IdentityCardCode) <> '', Bill.Consignee.IdentityCard.IdentityCardCode, KRD_MAIN.G08_DOC_KIND),
           'G08_DOC_ABBR', IF (TRIM (Bill.Consignee.IdentityCard.IdentityCardName) <> '', Bill.Consignee.IdentityCard.IdentityCardName, KRD_MAIN.G08_DOC_ABBR),
           'G08_DOC_SERIES', IF (TRIM (Bill.Consignee.IdentityCard.IdentityCardSeries) <> '', Bill.Consignee.IdentityCard.IdentityCardSeries, KRD_MAIN.G08_DOC_SERIES),
           'G08_DOC_NUMBER', IF (TRIM (Bill.Consignee.IdentityCard.IdentityCardNumber) <> '', Bill.Consignee.IdentityCard.IdentityCardNumber, KRD_MAIN.G08_DOC_NUMBER),
           'G17A', '643'
        );
        XMLCustomRegistration := XmlNodeFind (Report, 'CustomRegistration');
        IF (XmlNodeFind (Report, 'MainTransportModeCode')& XmlNodeFind (Report, 'Transports'),
          IF (STRPOS (Report.MainTransportModeCode, '10|12|16|40|43|80|81') <> 0, Block(
            VAR ('Transports', Integer);
            VAR ('Transport', Integer);
            Transport := XmlNodeFind (Report, 'Transports');
            // дата рейса
	          sTransport := Transport.TransportIdentifier;
      	    iTransp := STRPOS(' ОТ ', sTransport);
            IF(FIELDISNULL('KRD_MAIN','ARR_DATE')*FIELDISNULL('KRD_MAIN','SHIP_NAME')*(iTransp > 0), 
              Block(
                sTransport := TRIM(Copy(sTransport, iTransp+4, Length(sTransport)-iTransp-3));
	              sTransport := Copy(sTransport, 1, 10);
	              If(StrtoDate(sTransport, 'DD.MM.YYYY', '.') > 0,
                  SetFieldValue ('KRD_MAIN', 'ARR_DATE', StrtoDate(sTransport, 'DD.MM.YYYY', '.'))
                );
            ));
            // судно
	          sTransport := Transport.TransportIdentifier;
	          iTransp := STRPOS(' ОТ ', sTransport);
            IF(iTransp > 0,  sTransport := Copy(sTransport, 1, iTransp-1));
	            SetFieldValue ('KRD_MAIN', 'SHIP_NAME', sTransport);
          ))
        );
        PostRecord ('KRD_MAIN');
        VAR ('XMLCustomsDecision', Integer, XmlNodeFind (Report, 'CustomsDecision'));
        IF (XmlCustomsDecision,
          Block(
            IF (XmlNodeFind (XmlCustomsDecision, 'CustomGuaranties') & (XMLNODEVALUE (XmlNodeFind (XmlCustomsDecision, 'CustomGuaranties')) <> ''),
              Block(
                APPENDRECORD ('KRD_SLOTM');
                EDITRECORD ('KRD_SLOTM');
                SETFIELDVALUE ('KRD_SLOTM', 'KRECC', '41',
                                            'PLACEID', KRD_MAIN.PLACEID,
                                            'ID', KRD_MAIN.ID,
                                            'GC_1', XMLNODEVALUE (XmlNodeFind (XmlCustomsDecision, 'CustomGuaranties'))
                );
                POSTRECORD ('KRD_SLOTM');
              )
            );
            IF (XmlNodeFind (XmlCustomsDecision, 'AcceptLimit') & (TRIM(XMLNODEVALUE (XmlNodeFind (XmlCustomsDecision, 'AcceptLimit'))) <> ''),
              Block(
                VAR ('AcceptLimitDate', String, EXTRACTSTR (XMLNODEVALUE (XmlNodeFind (XmlCustomsDecision, 'AcceptLimit')), 1, 'T'));
                VAR ('AcceptLimitTime', String, EXTRACTSTR (XMLNODEVALUE (XmlNodeFind (XmlCustomsDecision, 'AcceptLimit')), 2, 'T'));
                VAR ('AcceptLimit', DateTime);
                AcceptLimit := ENCODEDATE (EXTRACTSTR (AcceptLimitDate, 1, '-'), EXTRACTSTR (AcceptLimitDate, 2, '-'), EXTRACTSTR (AcceptLimitDate, 3, '-')) + ENCODETIME (EXTRACTSTR (AcceptLimitTime, 1, ':'), EXTRACTSTR (AcceptLimitTime, 2, ':'), EXTRACTSTR (AcceptLimitTime, 3, ':'));
                APPENDRECORD ('KRD_SLOTM');
                EDITRECORD ('KRD_SLOTM');
                SETFIELDVALUE ('KRD_SLOTM', 'KRECC', '39',
                                            'PLACEID', KRD_MAIN.PLACEID,
                                            'ID', KRD_MAIN.ID,
                                            'GC_1', AcceptLimit
                );
                POSTRECORD ('KRD_SLOTM');
              )
            );
          )
        );
      )    
    );
    bImportCommDocs := ((INIFILE ('XMLKPS', 'DO1LoadAll', '0') = '0') & (bCreateDoc = False) & bFound) <> 1;
  )    
),  

FUNC ('ImportKrdComm', , Block(
  APPENDLOGFILE (sLogFile, '=== ФУНКЦИЯ ImportKrdComm');
  VAR ('Goods', Integer);
  VAR ('Good', Integer);
  VAR ('iGoodsCount', Integer, 0);
  VAR ('iGoodIndex', Integer, 0);
  VAR ('iGoodIndex2', Integer, 0);
  VAR ('GoodContLinks', Integer);
  VAR ('GoodContLink', Integer);
  VAR ('iGoodContLinksCount', Integer, 0);
  VAR ('iGoodContLinkIndex', Integer, 0);

  Goods := XmlNodeFind (Bill, 'rwhd:Goods');
  IF (Goods, iGoodsCount := XMLNodeChildCount (Bill));
  GoodContLinks := XmlNodeFind (Bill, 'GoodContLinks');
  IF (GoodContLinks, iGoodContLinksCount := XMLNodeChildCount (Bill));
  WHILE (Goods & (iGoodIndex < iGoodsCount) & (iGoodsCount > 0), Block(
    Good := XmlNodeChild (Bill, iGoodIndex);
    IF (XmlNodeName (Good) = 'rwhd:Goods', Block(
      APPENDRECORD ('KRD_COMM');
      EDIT ('KRD_COMM');
      SetFieldValue ('KRD_COMM',
                     'G33',          Good.GoodsTNVEDCode,
                     'G312',         Good.GoodsDescription,
                     'G311',         Good.CargoPlace.PlaceNumber,
                     'G313',         Good.CargoPlace.PlaceDescription,
                     'G35',          Good.BruttoVolQuant.GoodsQuantity,
                     'G42',          Good.InvoiceCost,
                     'REMARK',       Good.Comments,
                     'SVHCOMMENT',   Good.KeepingPlace.Comment,
                     'SVHAREA',      Good.KeepingPlace.Area,
                     'SVHHANGAR',    Good.KeepingPlace.Angar,
                     'SVHRACK',      Good.KeepingPlace.WHPackind,
                     'SVHCELL',      Good.KeepingPlace.Cell,
                     'SQUARE',       Good.KeepingPlace.Square,
                     //'ACCEPTDATE',   IF ((Good.KeepingLimit.AcceptDate <> '') ,
                     //                StrToDate (Good.KeepingLimit.AcceptDate, 'YYYY-MM-DD', '-') + IF (CONVERT (Good.KeepingLimit.AcceptTime, STRING) <> '', ' ' + Good.KeepingLimit.AcceptTime, ''), ''),
                     'STORAGE_TYPE', Good.KeepingLimit.StoringDateType,
                     'STORAGE_DATE', StrToDate (Good.KeepingLimit.DeadLineDate, 'YYYY-MM-DD', '-'),
                     'G42_CURRENCY', IF(CURRENCYCODE (Good.CurrencyCode)<> '', CURRENCYCODE (Good.CurrencyCode), Good.CurrencyCode),
                     'VALCODE', IF(CURRENCYABBR (Good.CurrencyCode) <> '', CURRENCYABBR (Good.CurrencyCode), Good.CurrencyCode),
                     'GN',           iGoodIndex2 + iGoodNumber + 1
      );
      IF (STRPOS (Good.MeasureQuantity.MeasureUnitQualifierCode, '111|112|113|114') <> 0,
        SetFieldValue ('KRD_COMM',
                       'G31_82',  Good.MeasureQuantity.MeasureUnitQualifierCode,
                       'G315CN',  IF (Good.MeasureQuantity.MeasureUnitQualifierName <> '', Good.MeasureQuantity.MeasureUnitQualifierName,
                                  IF (Good.MeasureQuantity.MeasureUnitQualifierCode <> '', REFERENCE ('UNITS', 'UNITCODE', Good.MeasureQuantity.MeasureUnitQualifierCode, 'UNITNAME'))),
                       'G315C',   Good.MeasureQuantity.GoodsQuantity),
        SetFieldValue ('KRD_COMM',
                       'G41A', Good.MeasureQuantity.MeasureUnitQualifierCode,
                       'G315',  IF (Good.MeasureQuantity.MeasureUnitQualifierName <> '', Good.MeasureQuantity.MeasureUnitQualifierName,
                                IF (Good.MeasureQuantity.MeasureUnitQualifierCode <> '', REFERENCE ('UNITS', 'UNITCODE', Good.MeasureQuantity.MeasureUnitQualifierCode, 'UNITNAME'))),
                       'G315A', Good.MeasureQuantity.GoodsQuantity)

      );

      // загружаем складской номер для всех, кто не включил в инишнике параметр NotLoadSkladNumberForContainers
      // если параметр включен, то складской номер для ДО с контейнерами удаляем
      // не забываем, что работает эта конструкция только для новых документов и
      // при включенном параметре DO1LoadAll
      IF (INIFILE ('XMLKPS', 'NotLoadSkladNumberForContainers', '0') = '0',
          SetFieldValue ('KRD_COMM', 'BOXNO', Good.GoodsWHNumber),
          IF (XmlNodeFind (Bill, 'Conatiners'),
            SetFieldValue ('KRD_COMM',
                           'BOXNO', ''),
            SetFieldValue ('KRD_COMM',
                           'BOXNO', Good.GoodsWHNumber)
          )
      );
      DeleteRecords ('KRD_COMM_PAPERS');
      //Связь товаров с накладными
      SetFieldValue ('KRD_COMM', 'N_TTN', iBillN_TTN, 'N_TTN_G32', iGoodIndex2 + 1);
      IF (LOCATE ('PAPERS_3', 'PAPER_DOCG44_CODE', [sPaperCode]),
        strTemp := REFERENCE ('PAPERS', 'PAPER_DOCG44_CODE', sPaperCode, 'PAPERNAME'),
        IF (LOCATE ('PAPERS_3', 'PAPERNAME', [Bill.PrDocumentName]),
          strTemp := Bill.PrDocumentName,
          strTemp := REFERENCE ('PAPERS', 'PAPERFULLNAME', Bill.PrDocumentName, 'PAPERNAME')
      ));
      IF (LOCATE ('KRD_PAPERS', 'PAPERNO;PAPERNAME', [Bill.PrDocumentNumber, strTemp]), Block(
        APPENDRECORD ('KRD_COMM_PAPERS');
        EDIT ('KRD_COMM_PAPERS');
        SetFieldValue ('KRD_COMM_PAPERS',
                       'DOC_TYPE', 13,
                       'DOC_COUNTER', KRD_PAPERS.COUNTER
        );
        POST ('KRD_COMM_PAPERS');
      ));

      //Привязка товара к таможенному документу - не сделать в этом формате

      POST ('KRD_COMM');

      //Считаем суммы по документу/партии
      dSumG311 := dSumG311 + KRD_COMM.G311;
      dSumG35 := dSumG35 + KRD_COMM.G35;
      dSumG315C := dSumG315C + KRD_COMM.G315C;
      dSumG42 := dSumG42 + KRD_COMM.G42;

      iGoodIndex2 := iGoodIndex2 + 1;
    ));
    iGoodIndex := iGoodIndex + 1;
  ));
  iGoodNumber := iGoodNumber + iGoodIndex2;
)),

FUNC ('ImportKrdDcd', ,
  Block (
    APPENDLOGFILE (sLogFile, '=== ФУНКЦИЯ ImportKrdDcd');
    VAR ('CustomDoc', Integer);
    VAR ('iCustomDocIndex', Integer, 0);
    VAR ('iCustomDocsCount', Integer, 0);
    
    iCustomDocsCount := XMLNodeChildCount (Report);
    WHILE ((iCustomDocIndex < iCustomDocsCount),
      Block(
        CustomDoc := XmlNodeChild (Report, iCustomDocIndex);
        IF (XmlNodeName (CustomDoc) = 'rwhd:CustomDocument',
          Block(
            IF (STRPOS (CustomDoc.DocumentCode + CustomDoc.PrDocumentName, wCustomDoc) = 0, Block(
              IF (wCustomDoc <> '', wCustomDoc := wCustomDoc + '|');
              wCustomDoc := wCustomDoc + Bill.DocumentCode + Bill.PrDocumentName;
              APPENDRECORD ('KRD_DCD');
              EDIT ('KRD_DCD');
              SetFieldValue ('KRD_DCD',
                             'PAPERCODE',    Right(CustomDoc.DocumentCode, 4),
                             'PAPERNAME',    CustomDoc.PrDocumentName,
                             'PAPERCLOSE',   StrToDate (CustomDoc.PrDocumentDate, 'YYYY-MM-DD', '-'),
                             'PAPERNO',      CustomDoc.PrDocumentNumber,
                             'CUSTOMS_CODE', CustomDoc.VttCustomsCode);
              POST ('KRD_DCD');
            ));
          )
        );
        iCustomDocIndex := iCustomDocIndex + 1;
      )
    ); // WHILE - // end

  )
),    

FUNC ('ImportKrdTransp', ,
  Block (
    APPENDLOGFILE (sLogFile, '=== ФУНКЦИЯ ImportKrdTransp');
    VAR ('DuTransport', Integer);
    VAR ('iTransportIndex', Integer, 0);
    VAR ('iTransportsCount', Integer, XMLNodeChildCount (Report));
    IF (iTransportsCount > 0,
      WHILE ((iTransportIndex < iTransportsCount),
        Block (
          DuTransport := XmlNodeChild (Report, iTransportIndex);
          IF (XmlNodeName (DuTransport) = 'rwhd:Transports', Block(

            APPENDRECORD ('KRD_TRANSP');
            EDIT ('KRD_TRANSP');
            SetFieldValue ('KRD_TRANSP',
                           'TRANSP_CODE',    DuTransport.TransportModeCode,
                           'CARNO',          DuTransport.TransportIdentifier,
                           'SVHCOMMENT',     DuTransport.KeepingPlace.Comment,
                           'SVHAREA',        DuTransport.KeepingPlace.Area,
                           'SVHPARKING',     DuTransport.KeepingPlace.Parking,
                           'SVHSQR',         DuTransport.KeepingPlace.Square,
                           'TRANSP_BRUTTO',  DuTransport.GrossWeightQuantity,
                           'TRANSP_COUNTRY', IF (DuTransport.TransportModeCode = '10', DuTransport.Sea.CountryCode),
			                     'NTRAILER',       IF (DuTransport.TransportModeCode = '10', DuTransport.Sea.EntryNumber,
					                 IF (STRPOS (DuTransport.TransportModeCode, '12|20')<>0, DuTransport.RailRoad.RailStation,
					                 IF (DuTransport.TransportModeCode = '40', DuTransport.Avia.FlightNumber,
					                 IF (STRPOS (DuTransport.TransportModeCode, '16|23|30|31|39|43|55')<>0, DuTransport.Avto.TrailerIdentifier))))
            );
            POST ('KRD_TRANSP');
            )
          );
          iTransportIndex := iTransportIndex + 1
        )
      )// end While (перебор элементов в Reporte)
    );

  )
),

FUNC ('ImportKrdPapers', PARAM ('aCommerseDocs', Boolean, 0),
  Block (
    APPENDLOGFILE (sLogFile, '=== ФУНКЦИЯ ImportKrdPapers');
    VAR ('iDoc', Integer);
    VAR ('iDocIndex', Integer, 0);
    VAR ('iDocsCount', Integer, 0);
    VAR ('XmlGoodsShipment', Integer, XmlNodeFind (Report, 'GoodsShipment'));

        iDocsCount := XMLNodeChildCount (Report);
        IF (iDocsCount > 0,
          WHILE ((iDocIndex < iDocsCount),
            Block (
              iDoc := XmlNodeChild (Report, iDocIndex);
//              iDoc := Bill;
//              IF (aCommerseDocs,
                IF ((XmlNodeName (iDoc) = 'rwhd:CommerceDocument') | (XmlNodeName (iDoc) = 'rwhd:OtherDocument'),
                  Block(
                    IF (LOCATE ('KRD_PAPERS', 'PLACEID;ID;PAPERNO;PAPERDATE', [KRD_MAIN.PLACEID, KRD_MAIN.Id, iDoc.PrDocumentNumber, iDoc.PrDocumentDate]) = 0,
                      Block(
                        APPENDRECORD('KRD_PAPERS');
                        SetFieldValue('KRD_PAPERS',
                                      'PAPERCODE', iDoc.PresentedDocumentModeCode,
    			                            'PAPERNAME', IF (XmlNodeChild (iDoc, 'PresentedDocumentModeCode')*(iDoc.PresentedDocumentModeCode <> ''),
      				                                       IF (LOCATE ('PAPERS_3', 'PAPER_DOCG44_CODE', [Right (iDoc.PresentedDocumentModeCode, 4)]),
                                                       Block(
      			                                             REFERENCE ('PAPERS', 'PAPER_DOCG44_CODE', Right (iDoc.PresentedDocumentModeCode, 4), 'PAPERNAME')
                                                       ),
                                                       Block(
                                                         IF (LOCATE ('PAPERS_3', 'PAPER_DOCG44_CODE', [iDoc.PresentedDocumentModeCode]),
                                                           Block(
                                                             REFERENCE ('PAPERS', 'PAPER_DOCG44_CODE', iDoc.PresentedDocumentModeCode, 'PAPERNAME')
                                                           ),
                                                           Block(
                                                             IF (LOCATE ('PAPERS_3', 'PAPERNAME', [iDoc.PrDocumentName]), iDoc.PrDocumentName,
                    			                                     REFERENCE ('PAPERS', 'PAPERFULLNAME', iDoc.PrDocumentName, 'PAPERNAME')
            			                                           )
                                                           )
                                                         )
                                                       )
                                                     ),
      			                                         IF (LOCATE ('PAPERS_3', 'PAPERNAME', [iDoc.PrDocumentName]), iDoc.PrDocumentName,
                			                                   IF (REFERENCE ('PAPERS', 'PAPERFULLNAME', iDoc.PrDocumentName, 'PAPERNAME') <> '',
                                                           REFERENCE ('PAPERS', 'PAPERFULLNAME', iDoc.PrDocumentName, 'PAPERNAME'),
                                                           iDoc.PrDocumentName
                                                         );
        			                                       )
                                                   ),
                                      'PAPERDATE', StrToDate (iDoc.PrDocumentDate, 'YYYY-MM-DD', '-'),
                                      'PAPERNO',   iDoc.PrDocumentNumber
                        );
                        POST ('KRD_PAPERS');

                      )
                    );

                  )
                ); //!! ,
 {
                IF (XmlNodeName (iDoc) = 'rwhd:GoodsShipment',
                  Block(
                    APPENDLOGFILE (sLogFile, 'ТОВАРОСОПРОВОДИТЕЛЬНЫЙ ДОКУМЕНТ | ' + XmlNodeName (iDoc));
                    APPENDLOGFILE (sLogFile, 'iBillN_TTN = ' + iBillN_TTN);
                    iBillN_TTN := iBillN_TTN + 1;
                    IF (LOCATE ('PAPERS_3', 'PAPER_DOCG44_CODE', [iDoc.PresentedDocumentModeCode]),
                      strTemp := REFERENCE ('PAPERS', 'PAPER_DOCG44_CODE', iDoc.PresentedDocumentModeCode, 'PAPERNAME'),
                      IF (LOCATE ('PAPERS_3', 'PAPERNAME', [iDoc.PrDocumentName]),
                        strTemp := iDoc.PrDocumentName,
                        strTemp := REFERENCE ('PAPERS', 'PAPERFULLNAME', iDoc.PrDocumentName, 'PAPERNAME')
                    ));
                    IF (STRPOS (iDoc.PresentedDocumentModeCode+strTemp+iDoc.PrDocumentNumber+iDoc.PrDocumentDate, wTransportDoc) = 0, Block(
                      IF (wTransportDoc <> '', wTransportDoc := wTransportDoc + '|');
                      wTransportDoc := wTransportDoc + iDoc.PresentedDocumentModeCode+strTemp+iDoc.PrDocumentNumber+iDoc.PrDocumentDate;
                      AppendRecord ('KRD_PAPERS');
                      SetFieldValue ('KRD_PAPERS',
                                     'PAPERCODE', iDoc.PresentedDocumentModeCode,
                                     'PAPERNAME', strTemp,
                                     'PAPERDATE', StrToDate (iDoc.PrDocumentDate, 'YYYY-MM-DD', '-'),
                                     'PAPERNO',   iDoc.PrDocumentNumber,
                                     'PAPER_REG_NO',
                                        IF (TRIM (iDoc.CustomNumber.CustomsCode) <> '',
                                              iDoc.CustomNumber.CustomsCode + '/' +
                                              FDT ('DDMMYY', StrToDate (iDoc.CustomNumber.RegistrationDate, 'YYYY-MM-DD', '-')) + '/' +
                                              iDoc.CustomNumber.GTDNumber + '/' + iDoc.CustomNumber.WaybillNumPP
                                        )
                      );
                      PostRecord ('KRD_PAPERS');
                      IF ((iBillN_TTN = 0), bFirstTD := 1, bFirstTD := 0);
                    ))
                  )
                );
}
              //! );
              iDocIndex := iDocIndex + 1
            )
          )// end While (перебор элементов в Report)
        );
    KRD_PAPERS.COUNTER
  )
),    
                 
FUNC ('ImportKrdCont', ,
  Block (
    APPENDLOGFILE (sLogFile, '=== ФУНКЦИЯ ImportKrdCont');
    VAR ('Containers', Integer);
    VAR ('Container', Integer);
    VAR ('iContainerIndex', Integer, 0);
    VAR ('iContainerIndex2', Integer, 0);
    VAR ('iContainersCount', Integer, 0);
  
    Containers := XmlNodeFind (Bill, 'Conatiners');
    IF (Containers, Block(
      iContainersCount := XMLNodeChildCount (Bill);
      WHILE (iContainerIndex < iContainersCount, Block(
        Container := XmlNodeChild (Bill, iContainerIndex);
        IF (XMLNODENAME (Container) = 'rwhd:Conatiners', Block(
          APPENDRECORD ('KRD_CONT');
          EDIT ('KRD_CONT');
          SetFieldValue ('KRD_CONT',
                         'CONTNO',      Container.ContainerNumber,
                         'G35',         Container.GrossWeightQuantity,
                         'SVHCOMMENT',  Container.KeepingPlace.Comments,
                         'SVHAREA',     Container.KeepingPlace.Area,
                         'SVHHANGAR',   Container.KeepingPlace.Angar,
                         'SVHPARKING',  Container.KeepingPlace.Parking,
                         'SVHSQR',      Container.KeepingPlace.Square,
                         'N_TTN',       iBillN_TTN,
                         'N_CONT',      iContainerIndex2 + 1);
          POST ('KRD_CONT');
          FindAndAddContLink();
          iContainerIndex2:= iContainerIndex2+1;
          iContainerOrderNo := iContainerOrderNo + 1;
        ));
        iContainerIndex := iContainerIndex + 1;
      ));
    ));
  )
),    

FUNC ('FindAndAddContLink', ,
  Block(
    APPENDLOGFILE (sLogFile, '=== ФУНКЦИЯ FindAndAddContLink');
    VAR ('iGoodContLinkIndex', Integer, 0);
    VAR ('iGoodContLinkIndex2', Integer, 0);
    VAR ('iGoodContLinksCount', Integer, 0);
    VAR ('GoodContLinks', Integer);
    VAR ('GoodContLink', Integer);
    VAR ('iGoodContLinksCount', Integer, 0);
    VAR ('Goods', Integer);
    VAR ('Good', Integer);
    VAR ('iGoodsCount', Integer, 0);
    VAR ('iGoodIndex', Integer, 0);
    VAR ('iGoodIndex2', Integer, 0);
    VAR ('sCurrentFilter', String);
    VAR ('sGoodsFilter', String);

    //добавить цикл по GoodContLinks
    GoodContLinks := XmlNodeFind (Bill, 'GoodContLinks');
    IF (GoodContLinks, Block(
      iGoodContLinksCount := XMLNodeChildCount (Bill);
      WHILE ((iGoodContLinkIndex < iGoodContLinksCount) & (iGoodContLinksCount > 0), Block(
        GoodContLink := XmlNodeChild (Bill, iGoodContLinkIndex);
        IF (XmlNodeName (GoodContLink) = 'rwhd:GoodContLinks', Block(
          IF ((iContainerIndex2+1) = GoodContLink.ContainerNumber, Block(
            //Цикл по товарам (Goods)
            Goods := XmlNodeFind (Bill, 'Goods');
            IF (Goods, iGoodsCount := XMLNodeChildCount (Bill));
            WHILE ((iGoodIndex < iGoodsCount) & (iGoodsCount > 0), Block(
              Good := XmlNodeChild (Bill, iGoodIndex);
              IF (XmlNodeName (Good) = 'rwhd:Goods', Block(
                IF ((iGoodIndex2+1) = GoodContLink.GoodNumber, Block(
                  OPENQUERY ('qryKC', 'STS_DB', 'SELECT PLACEID, ID, G32, N_TTN, N_TTN_G32 FROM KRD_COMM WHERE PLACEID='+CHAR(39)+vPlaceID+CHAR(39)+' AND ID='+CHAR(39)+vID+CHAR(39)+' AND N_TTN_G32='+CHAR(39)+GoodContLink.GoodNumber+CHAR(39)+' AND N_TTN='+CHAR(39)+(iBillIndex2+1)+CHAR(39));
                  OPENQUERY ('qryKCP', 'STS_DB', 'SELECT * FROM KR_C_P WHERE PLACEID='+CHAR(39)+vPlaceID+CHAR(39)+' AND ID='+CHAR(39)+vID+CHAR(39)+' AND G32='+CHAR(39)+FIELDVALUE ('qryKC', 'G32')+CHAR(39)+' AND DOC_TYPE=11 AND DOC_COUNTER='+CHAR(39)+iContainerOrderNo+CHAR(39));
                  IF (RECORDCOUNT ('qryKCP')<=0, // связи не существует
                    IF (RECORDCOUNT ('qryKC')>0,
                      Block(
                        sCurrentFilter := GETFILTER ('KRD_COMM');
                        sGoodsFilter := 'PLACEID='+CHAR(39)+vPlaceID+CHAR(39)+' AND ID='+CHAR(39)+vID+CHAR(39)+' AND N_TTN_G32='+CHAR(39)+GoodContLink.GoodNumber+CHAR(39)+' AND N_TTN='+CHAR(39)+(iBillIndex2+1)+CHAR(39);
                        SETFILTER ('KRD_COMM', sGoodsFilter);
                        EDIT ('KRD_COMM');
                        SetFieldValue ('KRD_COMM', 'N_CONT', iContainerOrderNo);
                        POST ('KRD_COMM');
                        SETFILTER ('KRD_COMM', sCurrentFilter);
                        APPENDRECORD ('KRD_COMM_PAPERS');
                        EDIT ('KRD_COMM_PAPERS');
                        SetFieldValue ('KRD_COMM_PAPERS', 'PLACEID', vPlaceID, 'ID', vID, 'G32', FIELDVALUE ('qryKC', 'G32'), 'DOC_TYPE', 11, 'DOC_COUNTER', iContainerOrderNo);
                        POST ('KRD_COMM_PAPERS');
                      )
                    )
                  );
                  CLOSEDATASET ('qryKCP');
                  CLOSEDATASET ('qryKC');
                )); // end if((iGoodIndex2+1) = GoodContLink.GoodNumber
                iGoodIndex2 := iGoodIndex2 + 1; // номер товара по порядку в transportDoce(в транспортДоке кроме Goods есть и другие элементы)
              )); // end If(XMLNODENAME (Good) = 'rwhd:Goods'
              iGoodIndex := iGoodIndex + 1;
            )); {Цикл по всем товарам}
            iGoodOrderNo := iGoodOrderNo + iGoodIndex2;
            iGoodIndex := 0;
            iGoodIndex2 := 0;
          )); // end if((iContainerIndex2+1) = GoodContLink.ContainerNumber
          iGoodContLinkIndex2 := iGoodContLinkIndex2 + 1;
        )); // end If(XMLNODENAME (GoodContLink) = 'rwhd:GoodContLinks'
        iGoodContLinkIndex := iGoodContLinkIndex + 1;
      )); {Цикл по всем GoodContLinks}
    )); // end if(GoodContLinks
  )
),

VAR ('sPaperCode', String, '');
VAR ('bByRecipient', Boolean, 0);
VAR ('bByTsDoc', Boolean, 0);
VAR ('bMultiPart', Boolean, IsMultiPartReport('bByRecipient', 'bByTsDoc'));
VAR ('sRecipient', String, '');
VAR ('sTsDoc', String, '');
VAR ('XmlGoodsShipment', Integer, XMLNodeFind (Report, 'rwhd:GoodsShipment'));
VAR ('wCustomDoc', String, '');
VAR ('wTransportDoc', String, '');

APPENDLOGFILE (sLogFile, '=== ОСНОВНОЙ МОДУЛЬ ===');

IF (XmlGoodsShipment,
  Block (
    VAR ('iBillCount', Integer, XMLNodeChildCount (Report));
    IF (iBillCount > 0,
      Block (
        VAR ('iBillIndex', Integer, 0);
        VAR ('iBillIndex2', Integer, 0);
        VAR ('sRecipient', String, '');
        VAR ('sTsDoc', String, '');
        VAR ('bChanged', Boolean, 0);
        VAR ('bImportCommDocs', Boolean, 0);
        VAR ('Bill', Integer);
        VAR ('iGoodNumber', Integer, 0);
        VAR ('dSumG311', Float, 0);
        VAR ('dSumG35', Float, 0);
        VAR ('dSumG315C', Float, 0);
        VAR ('dSumG42', Float, 0);
        VAR ('iBillN_TTN', Integer, 0);
        VAR ('iLoadDataForRailPapers', Boolean);
        VAR ('iLoadDataForRailConts',  Boolean);
        VAR ('iLoadDataForRailComms',  Boolean);

        iContainerOrderNo := 1;
        iGoodOrderNo := 1;
        WHILE ((iBillIndex < iBillCount) & (bChanged = False),
          Block (
            Bill := XmlNodeChild (Report, iBillIndex);
            IF (XmlNodeName (Bill) = 'rwhd:GoodsShipment', Block(
//!! УДАЛЕН БЛОК ПРОВЕРКИ ВЕТКИ ТРАНСПОРТНЫХ ДОКУМЕНТОВ BEGIN

              sPaperCode := Bill.PresentedDocumentModeCode;
  	      //IF (Length(sPaperCode) = 5, sPaperCode := Right(sPaperCode, 4));// времянка, использовали при отсутствии справочника 5-значных кодов
              IF (iBillIndex2 = 0,
                bChanged := True,
                Block(
                  IF (bByRecipient, bChanged := sRecipient <> Bill.Consignee.Name);
                  IF (LOCATE ('PAPERS_3', 'PAPER_DOCG44_CODE', [sPaperCode]),
              	    strTemp := REFERENCE ('PAPERS', 'PAPER_DOCG44_CODE', sPaperCode, 'PAPERNAME'),
              	    IF (LOCATE ('PAPERS_3', 'PAPERNAME', [Bill.PrDocumentName]),
                	    strTemp := Bill.PrDocumentName,
                	    strTemp := REFERENCE ('PAPERS', 'PAPERFULLNAME', Bill.PrDocumentName, 'PAPERNAME')
           	      ));
                  IF ((bChanged = 0) & bByTsDoc, bChanged := sTsDoc <> sPaperCode + '|' + strTemp + '|' + Bill.Date + '|' + Bill.PrDocumentNumber);
                  IF (XMLNodeChildCount (XmlNodeFind (Bill, 'Goods')) = 0, bChanged := 0);
              ));

              IF (bByRecipient, sRecipient := Bill.Consignee.Name);
  	          IF (LOCATE ('PAPERS_3', 'PAPER_DOCG44_CODE', [sPaperCode]),
                strTemp := REFERENCE ('PAPERS', 'PAPER_DOCG44_CODE', sPaperCode, 'PAPERNAME'),
                IF (LOCATE ('PAPERS_3', 'PAPERNAME', [Bill.PrDocumentName]),
                  strTemp := Bill.PrDocumentName,
                  strTemp := REFERENCE ('PAPERS', 'PAPERFULLNAME', Bill.PrDocumentName, 'PAPERNAME')
              ));
              IF (bByTsDoc, sTsDoc := sPaperCode + '|' + strTemp + '|' + Bill.Date + '|' + Bill.PrDocumentNumber);
              IF (bChanged, Block(
                ImportKrdMain();                
                IF (bImportData, Block(
  		            IF (RECORDCOUNT ('KRD_TRANSP')=0, ImportKrdTransp());
                  IF (RECORDCOUNT ('KRD_DCD')=0, ImportKrdDcd());
                ));
              ));

        	    IF (iBillIndex2 = 0, Block(
        	      iLoadDataForRailPapers := RECORDCOUNT ('KRD_PAPERS')=0;
                iLoadDataForRailConts  := RECORDCOUNT ('KRD_CONT')=0;
                iLoadDataForRailComms  := RECORDCOUNT ('KRD_COMM')=0;
              ));
              IF (bImportData, Block(
                // Если ж/д транспорт - ипортируем все накладные, в одну партию (bByTSDoc = 0)
                IF ((RECORDCOUNT ('KRD_PAPERS')=0)|iLoadDataForRailPapers,
                  block(
                   debugmessage ('ImportKrdPapers(0)', 1);
                   ImportTTN ();
                   ImportKrdPapers(0);
                  )
                );
  	            //Делаем ImportKrdComm() обязательно после ImportKrdPapers, ImportKrdTransp, ImportKrdDcd, т.к. здесь устанавливаются связи
                IF ((RECORDCOUNT ('KRD_COMM')=0)|iLoadDataForRailComms, Block(
                  ImportKrdComm();
        	        Edit ('KRD_MAIN');
                  SetFieldValue ('KRD_MAIN',
                          		   'G06',          IF (dSumG311 > 0, dSumG311, 0),
                          		   'TOTAL_WEIGHT', IF (dSumG35 > 0, dSumG35, 0),
                          		   'TOTAL_G315C',  IF (dSumG315C > 0, dSumG315C, 0),
                          		   'G222',         IF (dSumG42 > 0, dSumG42, 0)
        	        );
        	        Post ('KRD_MAIN');
                ));

                IF ((RECORDCOUNT ('KRD_CONT')=0)|iLoadDataForRailConts,
                    ImportKrdCont();
                );
  	            //Коммерческие документы читаем в первую партию, т.к. в XML-формате нет связи товаров(накладных) c коммерческими документами
  	            IF (bFirstTD & bImportData,
  		              IF (bImportCommDocs, Block(debugmessage ('ImportKrdPapers(1)', 1);ImportKrdPapers(1);));
                );
              ));
              iBillIndex2 := iBillIndex2 + 1;  // номер накладной по порядку в XML
              
	    //!! УДАЛЕН БЛОК ПРОВЕРКИ ВЕТКИ ТРАНСПОРТНЫХ ДОКУМЕНТОВ END
            ),
            Block(
              IF ((XmlNodeName (Bill) = 'rwhd:CommerceDocument') | (XmlNodeName (Bill) = 'rwhd:OtherDocument'),
                Block(
                  ImportKrdPapers(0);
                )
              );
            )
          );
          
          bChanged := False;
          iBillIndex := iBillIndex + 1;
          )
        )
      ),
      RAISEEXCEPTION ('Ошибка загрузки - Список накладных пуст')
    )
  )
);

    APPENDLOGFILE (sLogFile, '=== ЗАПИСЬ РЕГИСТРАЦИИ');
    
        IF (XMLCustomRegistration,
          Block(
            IF (KRD_MAIN.A_MODE = '7',
              Block(
                OPENQUERY ('qryAMode7', 'STS_DB', 'SELECT PLACEID, ID, PART_NO, MAIN_ID FROM KRD_MAIN WHERE MAIN_ID='+KRD_MAIN.MAIN_ID);
                WHILE (EOF ('qryAMode7') = 0,
                  Block(
                    SETFILTER ('KRD_MAIN', 'PLACEID='+CHAR(39)+FIELDVALUE ('qryAMode7', 'PLACEID')+CHAR(39)+' AND ID='+CHAR(39)+FIELDVALUE ('qryAMode7', 'ID')+CHAR(39));
                    EditRecord ('KRD_MAIN');
                    IF (XMLCustomRegistration & XmlNodeFind (XMLCustomRegistration, 'RegisterNumber'),
                      Block(
                        SetFieldValue ('KRD_MAIN', 'PP',
                          XMLCustomRegistration.RegisterNumber.CustomsCode + '/' +
                          FDT ('DDMMYYYY', StrToDate (XMLCustomRegistration.RegisterNumber.RegistrationDate, 'YYYY-MM-DD', '-')) + '/' +
                          XMLCustomRegistration.RegisterNumber.GTDNumber);
                        VAR ('sRegDateTime', DateTime, Now());
                        VAR ('sRegDate', String, XMLCustomRegistration.RegisterNumber.RegistrationDate);
                        VAR ('sRegTime', String, XMLCustomRegistration.RegisterTime);                 
                        sRegDateTime := ENCODEDATE (EXTRACTSTR (sRegDate, 1, '-'), EXTRACTSTR (sRegDate, 2, '-'), EXTRACTSTR (sRegDate, 3, '-'));
                        //ShowMessage('123'+sREgDAteTime);
                        IF (TRIM (XMLCustomRegistration.RegisterTime) <> '', sRegDateTime := sRegDateTime + ENCODETIME (EXTRACTSTR (AcceptLimitTime, 1, ':'), EXTRACTSTR (AcceptLimitTime, 2, ':'), EXTRACTSTR (AcceptLimitTime, 3, ':')));
                        SetFieldValue ('KRD_MAIN', 'REG_TIME_NOTICE', sRegDateTime);
                      )
                    );
                    SetFieldValue ('KRD_MAIN',
                                   'MC_STATUS_NT', CASE (XMLCustomRegistration.CustomState, ['ds_Editing', '0',
                                                                                             'ds_Rebuilding', '1',
                                                                                             'ds_OnInspect', 'И',
                                                                                             'ds_Registered', '3'],
                                                                                             ''),
                                   'GD2_NT', XMLCustomRegistration.Inspector.LNP,
                                   'FIO_INSPECTOR_NT', TRIM(XMLCustomRegistration.Inspector.PersonSurname + ' ' + XMLCustomRegistration.Inspector.PersonName + ' ' + XMLCustomRegistration.Inspector.PersonMiddleName)
                    );
                    PostRecord ('KRD_MAIN');
                    SETFILTER ('KRD_MAIN', '');
                    NEXT ('qryAMode7');
                  )
                ); {WHILE - EOF ('qryAMode7') = 0 }
              ),
              Block(
                EditRecord ('KRD_MAIN');
                IF (XMLCustomRegistration & XmlNodeFind (XMLCustomRegistration, 'RegisterNumber'),
                  Block(
                    SetFieldValue ('KRD_MAIN', 'PP',
                      XMLCustomRegistration.RegisterNumber.CustomsCode + '/' +
                      FDT ('DDMMYYYY', StrToDate (XMLCustomRegistration.RegisterNumber.RegistrationDate, 'YYYY-MM-DD', '-')) + '/' +
                      XMLCustomRegistration.RegisterNumber.GTDNumber);
                      VAR ('sRegDateTime', DateTime, Now());
                      VAR ('sRegDate', String, XMLCustomRegistration.RegisterNumber.RegistrationDate);
                      VAR ('sRegTime', String, XMLCustomRegistration.RegisterTime);                 
                      sRegDateTime := ENCODEDATE (EXTRACTSTR (sRegDate, 1, '-'), EXTRACTSTR (sRegDate, 2, '-'), EXTRACTSTR (sRegDate, 3, '-'));
                      //ShowMessage('123'+sREgDAteTime);
                      IF (TRIM (XMLCustomRegistration.RegisterTime) <> '', sRegDateTime := sRegDateTime + ENCODETIME (EXTRACTSTR (AcceptLimitTime, 1, ':'), EXTRACTSTR (AcceptLimitTime, 2, ':'), EXTRACTSTR (AcceptLimitTime, 3, ':')));
                      SetFieldValue ('KRD_MAIN', 'REG_TIME_NOTICE', sRegDateTime);

                  )
                );
                SetFieldValue ('KRD_MAIN',
                               'MC_STATUS_NT', CASE (XMLCustomRegistration.CustomState, ['ds_Editing', '0',
                                                                                         'ds_Rebuilding', '1',
                                                                                         'ds_OnInspect', 'И',
                                                                                         'ds_Registered', '3'],
                                                                                         ''),
                               'GD2_NT', XMLCustomRegistration.Inspector.LNP,
                               'FIO_INSPECTOR_NT', TRIM(XMLCustomRegistration.Inspector.PersonSurname + ' ' + XMLCustomRegistration.Inspector.PersonName + ' ' + XMLCustomRegistration.Inspector.PersonMiddleName),
                );
                PostRecord ('KRD_MAIN');
              )
            ); {IF - KRD_MAIN.A_MODE = '7' }
          )
        ); {IF - XMLCustomRegistration }
        
//РАСКОМЕНТИРОВАТЬ ДЛЯ ПОКАЗА ЛОГА
//SHOWLOGFILE (sLogFile, 'Результаты загрузки представления документов');
