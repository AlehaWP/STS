// *****************************************************************************
// Название: ДО1.Альбом(ЭК) 5.13.0
// Описание: ДО1.Альбом(ЭК) 5.13.0
// Кнопка вызова: 0
// Подпись кнопки: ДО1.Альбом(ЭК)
// Язык: FuncScript
// Вызов по событию: 
// *****************************************************************************
//
{
//
// DEBUG /*
VAR ('dbg', String, 'Debug.log');
VAR ('timerStart', DateTime, Date() + Time(1));
EXECUTESCRIPT (INCLUDETRAILINGBACKSLASH (PROGRAMPATH ()) + 'PROCDOCS\writelog.prd');
writelog (dbg, '=== ' + KRD_MAIN.NBD + ' ' + CHARSTR ('=', 60));
writelog (dbg, 'do1_album.exp (start)');
// DEBUG */
//
}

VAR ('sSQL', String, '');
VAR ('sDummy', String, '');
VAR ('sAllConts', String, '');
VAR ('bUnlinkedGoodsChecked', Integer, 0);
VAR ('bQContsOpened', Integer, 0);


OPENTABLE ('KRD_MAIN_3', 'STS_DB', 'KRD_MAIN', 'PLACEID;MAIN_ID');


// получаем список контейнеров привязанных к товарам
FUNC ('OpenQConts', '',
  Block(
    sSQL := 'SELECT KCP.G32, KC.CONTNO FROM KRD_CONT KC ' +
            ' INNER JOIN KR_C_P KCP ON KCP.PLACEID=KC.PLACEID AND KCP.ID=KC.ID AND KCP.DOC_COUNTER=KC.COUNTER ' +
            ' WHERE KCP.PLACEID=' + vPlaceId +
            ' AND KCP.ID=' + vId +
            ' AND KCP.DOC_TYPE=' +char(39)+ '11' +char(39);
    OPENQUERY ('qConts', 'STS_DB', sSQL, 1);
    bQContsOpened := 1;
  )
), // FUNC -  OpenQConts() //


FUNC ('GENERATEUUID_2', ,
  Block(
    Var('sGuid', String);
    sGuid := GENERATEUUID ();
    sGuid := COPY (sGuid, 1, 8) + '-' + COPY (sGuid, 9, 4) + '-' + COPY (sGuid, 13, 4) + '-' + COPY (sGuid, 17, 4) + '-' + COPY (sGuid, 21, 12);
    sGuid
)),

FUNC ('REFERENCE2',
     BLOCK(
             PARAM ('sNameTable', String, 0);
             PARAM ('sFieldWhere', String, 1);
             PARAM ('sValue', String, 2);
             PARAM ('sReturnField', String, 3);
     ),
     BLOCK (
            VAR ('sReturnValue', String, '');
            sReturnValue := '';
            if ( FILEEXISTS( INCLUDETRAILINGBACKSLASH(INIFILE ('dbReference', 'PATH', 'C:\Program Files (x86)\CTM\STS\REFS',INCLUDETRAILINGBACKSLASH(PROGRAMPATH())+ 'sts.ini'))+ sNameTable+'.dbf' ),
                        OPENDATABASE ('dbReference2', INIFILE ('dbReference', 'Driver Name', 'STANDARD',INCLUDETRAILINGBACKSLASH(PROGRAMPATH())+ 'sts.ini'),
                                                     'PATH='+INIFILE ('dbReference', 'PATH', 'C:\Program Files (x86)\CTM\STS\REFS',INCLUDETRAILINGBACKSLASH(PROGRAMPATH())+ 'sts.ini'),
                                                     'WIN CODING='+INIFILE ('dbReference', 'WIN CODING', '0',INCLUDETRAILINGBACKSLASH(PROGRAMPATH())+ 'sts.ini')
               ),
                        OPENDATABASE ('dbReference2', 'STANDARD',
                                                     'PATH='+INIFILE ('LocalDB', 'Database', 'C:\Program Files (x86)\CTM\STS\DATA2',INCLUDETRAILINGBACKSLASH(PROGRAMPATH())+ 'sts.ini')
               )
            );//if
            OPENQUERY ('qRef',  'select '+ sReturnField +' from '+sNameTable+' where '+ sFieldWhere +'=' + CHAR(39) + sValue + CHAR(39), 'dbReference2', 1);
            sReturnValue := FIELDVALUE ('qRef', sReturnField);
            CLOSEDATABASE ('dbReference2');
            sReturnValue
     )//block
);// func

// Проверка, есть ли не привязанные товары в ДО-1
FUNC ('CheckUnlinkedGoods', '',
  Block(
    IF (bUnlinkedGoodsChecked = 0,
      Block(
        // НЕ ПРИВЯЗАННЫЙ ТОВАР
        OPENQUERY ('qUnlinked', 'STS_DB', 'SELECT COUNT(PLACEID) AS C FROM KRD_COMM WHERE PLACEID=' + vPlaceID + ' AND ID=' + vID + ' AND N_TTN IS NULL', 1);
        OPENQUERY ('qCommCount', 'STS_DB', 'SELECT COUNT(PLACEID) AS C FROM KRD_COMM WHERE PLACEID=' + vPlaceId + ' AND ID=' + vId, 1);

        //VAR ('countKC', Integer, RECORDCOUNT ('KRD_COMM'));
        //VAR ('countUnlinked', Integer, RECORDCOUNT ('qUnlinked'));
        VAR ('countKC', Integer, qCommCount.C);
        VAR ('countUnlinked', Integer, qUnlinked.C);

        CLOSEDATASET ('qUnlinked');
        CLOSEDATASET ('qCommCount');

        IF (countUnlinked <> 0,
          Block(
            IF (countKC <> countUnlinked,
              Block(
                XMLNODESETVALUES (XmlTransportDocs, 'ВНИМАНИЕ_Отсутствует_связь_товара_с_накладной', 'ОписаниеОшибки', 'Зайдите в редактирование партий груза и проверьте привязку товара к накладной!')
              )
            );
          )
        );
        bUnlinkedGoodsChecked := 1;
      )
    ); // IF - //
  )
), // FUNC - CheckUnlinkedGoods () //

// вычисление количества мест
FUNC ('CargoPlacesCount', ,
  Block(
    VAR ('dCargoPlacesCount', Float, 0);

    sSQL := 'SELECT SUM (G311) AS SumG311 FROM KRD_COMM WHERE PLACEID=' + KRD_MAIN.PLACEID + ' AND ID IN (SELECT ID FROM KRD_MAIN WHERE PLACEID=' + KRD_MAIN.PLACEID + ' AND MAIN_ID=' + KRD_MAIN.ID + ')';
    OPENQUERY ('qryMain', 'STS_DB', sSQL, 1);
    dCargoPlacesCount := qryMain.SumG311;
    dCargoPlacesCount
  )
),

VAR ('vPLACEID', String);
VAR ('vID', String);
VAR ('vG32', String);
VAR ('sBoxNo', String);
VAR ('XmlRoot', Integer, GETXMLDOCUMENT());
VAR ('XmlDoc', Integer);
VAR ('XMLDo1', Integer, 0);
VAR ('vMPOSign', integer, 0);


IF (XmlNodeChildCount (XmlRoot) < 1,
  Block(

    XmlDoc := XmlNodeAddChild (XmlRoot, 'ED_Container');
    XmlNodeSetAttribute (XmlDoc, 'xmlns', 'urn:customs.ru:Information:ExchangeDocuments:ED_Container:5.12.0');
    XmlNodeSetAttribute (XmlDoc, 'xmlns:cat_ru', 'urn:customs.ru:CommonAggregateTypes:5.10.0');
    XmlNodeSetAttribute (XmlDoc, 'DocumentModeID', '1006058E');

    //Уникальный идентификатор документа
    VAR ('XMLNodeDocumentId', Integer, XMLNodeAddChild(XMLDoc, 'cat_ru:DocumentID'));

    XMLNodeSetValue (XMLNodeDocumentId, GENERATEUUID_2 ());

    VAR ('XMLContainerDoc', Integer, XMLNodeAddChild (XMLDoc, 'ContainerDoc'));
    XmlNodeSetAttribute (XMLContainerDoc, 'xmlns', 'urn:customs.ru:Information:ExchangeDocuments:ED_Container:5.12.0');

    VAR ('XMLDocBody', Integer, XMLNodeAddChild (XMLContainerDoc, 'DocBody'));
    XmlNodeSetAttribute (XMLDocBody, 'xmlns', 'urn:customs.ru:Information:ExchangeDocuments:ED_Container:5.12.0');

    XMLDo1 := XMLNodeAddChild (XMLDocBody, 'do1r:DO1Report');


//    XMLDo1 := XMLNodeAddChild (XMLDoc, 'do1r:DO1Report');
    XmlNodeSetAttribute (XmlDo1, 'xmlns:cat_ru', 'urn:customs.ru:CommonAggregateTypes:5.10.0');

    XmlNodeSetAttribute (XmlDo1, 'xmlns:catWH_ru', 'urn:customs.ru:Information:WarehouseDocuments:WarehouseCommonAggregateTypesCust:5.10.0');
    XmlNodeSetAttribute (XmlDo1, 'xmlns:do1r', 'urn:customs.ru:Information:WarehouseDocuments:DO1Report:5.10.0');
    XmlNodeSetAttribute (XmlDo1, 'DocumentModeID', '1008001E');

    //Уникальный идентификатор документа
    //Код вида основного ТС
    //Номер и дата отчета

    XmlNodeSetValues(XmlDo1, '',
              'cat_ru:DocumentID',              GENERATEUUID_2(),
              'catWH_ru:MainTransportModeCode', KRD_MAIN.G261,
              'catWH_ru:ReportNumber',          CUSTOMSNOPART (KRD_MAIN.NBD, 3, RIGHT (KRD_MAIN.NBD, 7)),
              'catWH_ru:ReportDate',            FDT ('YYYY-MM-DD', KRD_MAIN.BD_DATE),
              'catWH_ru:ReportTime',            FDT ('HH:MM:SS', KRD_MAIN.BD_DATE),
    );

    //Данные о регистрации отчета в таможенном органе

    VAR ('XMLCustomRegistration', Integer, XMLNodeAddChild (XMLDo1, 'catWH_ru:CustomRegistration'));
    XmlNodeSetValues (XMLCustomRegistration, '',
                  'catWH_ru:CustomState', CASE (KRD_MAIN.MC_STATUS_BD, ['1', 'ds_Rebuilding',
                                                                        'И', 'ds_OnInspect',
                                                                        '3', 'ds_Registered'],
                                                                        'ds_Editing')
    );

    IF (FIELDISNULL('KRD_MAIN', 'GD1')=0,
        XmlNodeSetValues (XmlDo1, 'catWH_ru:CustomRegistration',
                  'catWH_ru:RegisterTime', FDT ('HH:MM:SS', KRD_MAIN.GD1),
        )
    );
    IF (KRD_MAIN.FIO_INSPECTOR <> '', Block(
          VAR ('XMLInspector', Integer, XMLNodeAddChild (XMLCustomRegistration, 'catWH_ru:Inspector'));
          XmlNodeSetValues (XmlInspector, '',
                  'cat_ru:PersonSurname', EXTRACTSTR (KRD_MAIN.FIO_INSPECTOR, 1, ' '),
                  'cat_ru:PersonName',  EXTRACTSTR (KRD_MAIN.FIO_INSPECTOR, 2, ' '),
                  'cat_ru:PersonMiddleName', EXTRACTSTR (KRD_MAIN.FIO_INSPECTOR, 3, ' '),
                  'cat_ru:PersonPost', KRD_MAIN.POST_INSPECTOR,
                  'catWH_ru:LNP',      KRD_MAIN.GD2);
    ));
    IF (KRD_MAIN.REG_NBD <> '',
          Block(
            VAR ('XMLRegisterNumber', Integer, XMLNodeAddChild (XMLCustomRegistration, 'catWH_ru:RegisterNumber'));
            XmlNodeSetValues (XmlRegisterNumber, '',
                      'cat_ru:CustomsCode',      CUSTOMSNOPART (KRD_MAIN.REG_NBD, 1, ''),
                      'cat_ru:RegistrationDate', FDT('YYYY-MM-DD', EXCLUDEDATE (KRD_MAIN.REG_NBD)),
                      'cat_ru:GTDNumber',        CUSTOMSNOPART (KRD_MAIN.REG_NBD, 3, '')
            );
            IF(SPLITSTR (KRD_MAIN.REG_NBD, '/', sDummy) >= 4,
              Block(
                sDummy := KRD_MAIN.REG_NBD;
                sDummy := DELETE (sDummy, 1, STRPOS ('/', sDummy));
                sDummy := DELETE (sDummy, 1, STRPOS ('/', sDummy));
                sDummy := DELETE (sDummy, 1, STRPOS ('/', sDummy));
                If(LENGTH (sDummy) = 1,
                   XmlNodeSetValues (XmlRegisterNumber, '', 'catWH_ru:OtherWHPlaceKind', EXTRACTSTR (KRD_MAIN.REG_NBD, 4, '/') ),
                   XmlNodeSetValues (XmlRegisterNumber, '', 'catWH_ru:CertificateNumber', IF (KRD_MAIN.G144 <> '',  KRD_MAIN.G144, STORES.LICENCENO) )
                )
              ),
              XmlNodeSetValues (XmlRegisterNumber, '', 'catWH_ru:CertificateNumber', IF (KRD_MAIN.G144 <> '',  KRD_MAIN.G144, STORES.LICENCENO) )
            );
          )
    ); // IF - KRD_MAIN.REG_NBD <> '' //




    // Данные о владельце склада //
    VAR ('XMLWarehouseOwner', Integer, XMLNodeAddChild (XmlDo1, 'catWH_ru:WarehouseOwner'));
    XmlNodeSetValues (XmlWarehouseOwner, '',
              'cat_ru:OrganizationName', IF(KRD_MAIN.G142 <> '', KRD_MAIN.G142, STORES.NAME),
              'cat_ru:RFOrganizationFeatures\cat_ru:OGRN',             STORES.G140,
              'cat_ru:RFOrganizationFeatures\cat_ru:INN',              STORES.G144C,
              'cat_ru:RFOrganizationFeatures\cat_ru:KPP',              STORES.KPP
    );

    VAR ('XmlWarehouseOwnerAddress', Integer, XMLNodeAddChild (XMLWarehouseOwner, 'catWH_ru:Address'));
    XmlNodeSetValues (XmlWarehouseOwnerAddress, '',
                        'catWH_ru:AddressLine', IF (KRD_MAIN.G143 <> '', KRD_MAIN.G143, STORES.ADDRESS)
    );
    VAR ('XMLWarehouseOwnerWarehouseLicense', Integer, XMLNodeAddChild (XMLWarehouseOwner, 'catWH_ru:WarehouseLicense'));
    XmlNodeSetValues (XmlWarehouseOwnerWarehouseLicense, '',
              'catWH_ru:CertificateKind', CASE (KRD_MAIN.G1440, ['1', 'lic_Certificate',
                                                                 '2', 'lic_Licence',
                                                                 '3', 'lic_Permition',
                                                                 '4', 'lic_PermZtk',
                                                                 '5', 'lic_TempZtk'
                                                                ], 'lic_Certificate'),
              'catWH_ru:CertificateNumber', IF (KRD_MAIN.G144 <> '',  KRD_MAIN.G144, STORES.LICENCENO),
              'catWH_ru:CertificateDate', IF (KRD_MAIN.G145 > 0, FDT ('YYYY-MM-DD', KRD_MAIN.G145), FDT ('YYYY-MM-DD', STORES.LICENCEDATE))

    );

    If(KRD_MAIN.AUTHOR <> '',
    Block(
      VAR ('XMLWarehouseOwnerWarehousePerson', Integer, XMLNodeAddChild (XMLWarehouseOwner, 'catWH_ru:WarehousePerson'));
      XmlNodeSetValues (XmlWarehouseOwnerWarehousePerson, '',
                      'cat_ru:PersonSurname', EXTRACTSTR (KRD_MAIN.AUTHOR, 1, ' '),
                      'cat_ru:PersonName', EXTRACTSTR (KRD_MAIN.AUTHOR, 2, ' '),
                      'cat_ru:PersonMiddleName',    EXTRACTSTR (KRD_MAIN.AUTHOR, 3, ' '),
                      'cat_ru:PersonPost', KRD_MAIN.AUTHOR_POST
      );
    ));

    // Перевозчик
    VAR ('XMLCarrier', Integer, XMLNodeAddChild (XMLDo1, 'do1r:Carrier'));
    XmlNodeSetValues (XmlCarrier, '',
              'cat_ru:OrganizationName', KRD_MAIN.G042
    );

    XmlNodeSetValues (XmlCarrier, '',
              'cat_ru:OrganizationName', KRD_MAIN.G042
    );
    If(KRD_MAIN.G04_COUNTRY = '643',
      XmlNodeSetValues (XmlCarrier, '',
              'cat_ru:RFOrganizationFeatures\cat_ru:OGRN',             KRD_MAIN.G04_OGRN,
              'cat_ru:RFOrganizationFeatures\cat_ru:INN',              KRD_MAIN.G044C,
              'cat_ru:RFOrganizationFeatures\cat_ru:KPP',              KRD_MAIN.G04_KPP
      )
    );

    XmlNodeSetValues (XmlCarrier, '',
              'catWH_ru:CountryCode',    KRD_MAIN.G04_COUNTRY
    );


    VAR ('XMLCarrierAddress', Integer, XMLNodeAddChild (XMLCarrier, 'catWH_ru:Address'));
    XmlNodeSetValues (XmlCarrierAddress, '',
              'catWH_ru:AddressLine', KRD_MAIN.G043
    );

    If(KRD_MAIN.G040 <> '',
    Block(
      VAR ('XMLCarrierPers', String);
      VAR ('XMLCarrierPerson', Integer, XMLNodeAddChild (XMLCarrier, 'catWH_ru:CarrierPerson'));

      XMLCarrierPers := EXTRACTSTR (KRD_MAIN.G040, 1, ' ');
      IF(Trim(XMLCarrierPers) = '', XMLCarrierPers := '-');
      XmlNodeSetValues (XmlCarrierPerson, '',
              'cat_ru:PersonSurname', XmlCarrierPers

      );
      XMLCarrierPers := EXTRACTSTR (KRD_MAIN.G040, 2, ' ');
      IF(Trim(XMLCarrierPers) = '', XMLCarrierPers := '-');
      XmlNodeSetValues (XmlCarrierPerson, '',
              'cat_ru:PersonName', XmlCarrierPers

      );

      XmlNodeSetValues (XmlCarrierPerson, '',
              'cat_ru:PersonPost', KRD_MAIN.G040P
      );
    ));

    // Описание транспортных средств
    VAR ('XmlDuTransport', Integer);
    VAR ('sTranspCode', String);
    VAR ('sTransport', String);


    FIRST ('KRD_TRANSP');
    WHILE (EOF ('KRD_TRANSP') = 0,
      Block(
        XmlDuTransport := XmlNodeAddChild (XmlDo1, 'do1r:Transports');
        sTranspCode := IF (KRD_TRANSP.TRANSP_CODE <> '', KRD_TRANSP.TRANSP_CODE, KRD_MAIN.G261);
        sTransport := KRD_TRANSP.CARNO;


        // собственно транспорт
        XmlNodeSetValues (XmlDuTransport, '',
                  'catWH_ru:TransportModeCode',   sTranspCode,
                  'catWH_ru:TransportIdentifier', sTransport
        );

        IF (INIFILE ('XMLKPS', 'WriteOnlyCARNO', '0')= '1',
          IF (STRPOS (sTranspCode, '10|12|16|40|43|80|81') <> 0,
            IF((KRD_MAIN.SHIP_NAME <> '')*KRD_MAIN.ARR_DATE, sTransport := KRD_TRANSP.CARNO) // пароход
          ),
          IF (STRPOS (sTranspCode, '10|12|16|40|43|80|81') <> 0,
            IF((KRD_MAIN.SHIP_NAME <> '')*KRD_MAIN.ARR_DATE, sTransport := KRD_TRANSP.CARNO + ' ОТ '+ FDT('DD.MM.YYYY', KRD_MAIN.ARR_DATE)) // пароход+дата рейса
          )
        );

        Var('sSeaCountry', String);
        IF (KRD_TRANSP.TRANSP_COUNTRY <> '',
          sSeaCountry := KRD_TRANSP.TRANSP_COUNTRY,
          sSeaCountry := KRD_MAIN.TRANSP_COUNTRY
        );
        IF ((STRPOS (sTranspCode, '10|80|81') <> 0) *
           ( (LENGTH (KRD_TRANSP.NTRAILER) > 0) | (Trim(sSeaCountry) <> '') ),
          Block(
            VAR ('XMLTransportsSea', Integer, XMLNodeAddChild (XmlDuTransport, 'catWH_ru:Sea'));
            XmlNodeSetValues(XMLTransportsSea, '',
                      'catWH_ru:EntryNumber',               KRD_TRANSP.NTRAILER,
                       'catWH_ru:CountryCode',               sSeaCountry
            )
          )
        );

        IF ((STRPOS (sTranspCode, '12|20') <> 0)*(LENGTH (KRD_TRANSP.NTRAILER) > 0),
          Block(
            VAR ('XMLTransportsRailRoad', Integer, XMLNodeAddChild (XmlDuTransport, 'catWH_ru:RailRoad'));
            XmlNodeSetValues (XMLTransportsRailRoad, '',
                       'catWH_ru:RailStation', COPY (KRD_TRANSP.NTRAILER, 1, 5)
            );
          )
        ); // IF - (STRPOS(sTranspCode, '12|20') <> 0)*(LENGTH (KRD_TRANSP.NTRAILER) > 0) //
        IF((sTranspCode = '40')*(LENGTH (KRD_TRANSP.NTRAILER) > 0),
          Block(
            VAR ('XMLTransportsAvia', Integer, XMLNodeAddChild (XmlDuTransport, 'catWH_ru:Avia'));
            XmlNodeSetValues (XMLTransportsAvia, '',
                    'catWH_ru:FlightNumber', KRD_TRANSP.NTRAILER
            );
        IF(KRD_MAIN.ARR_DATE,
             XmlNodeSetValues (XMLTransportsAvia, '',
                    'catWH_ru:FlightDate', FDT ('YYYY-MM-DD', KRD_MAIN.ARR_DATE)
            ));

          )
        ); // IF - (sTranspCode = '40')*(LENGTH (KRD_TRANSP.NTRAILER) > 0) //
        IF ((STRPOS (sTranspCode, '16|23|30|31|32|39|43|55')<>0)*(LENGTH (KRD_TRANSP.NTRAILER) > 0),
          Block(
            VAR ('XMLTransportsAvto', Integer, XMLNodeAddChild (XmlDuTransport, 'catWH_ru:Avto'));
            XmlNodeSetValues (XMLTransportsAvto, '',
                      'catWH_ru:TrailerIdentifier', KRD_TRANSP.NTRAILER
            );
          )
        ); // IF - (STRPOS(sTranspCode, '16|23|30|31|32|39|43|55')<>0)*(LENGTH (KRD_TRANSP.NTRAILER) > 0) //


        NEXT ('KRD_TRANSP');
      )
    ); // WHILE - EOF ('KRD_TRANSP') = 0 //
  ),
  XmlDoc := XmlNodeChild (XmlRoot, 0);
);


VAR ('XmlGoodsShipment', Integer, XmlNodeAddChild (XmlDo1, 'do1r:GoodsShipment'));
XmlNodeSetValues (XmlGoodsShipment, '', 'do1r:TotalPackageNumber', CargoPlacesCount());
XmlNodeSetValues (XmlGoodsShipment, '', 'do1r:MPOSign', vMPOSign);  //признак МПО

VAR ('wCustomDoc', String, '');


FUNC ('FindTransportDocByG32', PARAM ('GoodsNumber', Integer, 0),
  Block (
    VAR ('Result', Integer, 0);
    VAR ('TransportDoc', Integer);
    VAR ('GoodDoc', Integer);
    VAR ('iNodesIndex', Integer, 0);
    VAR ('iNodesCount', Integer, 0);
    VAR ('iGoodsIndex', Integer, 0);
    VAR ('iGoodsCount', Integer, 0);

    iNodesCount := XMLNodeChildCount (XmlGoodsShipment);
    WHILE (iNodesIndex < iNodesCount,
      Block(
        TransportDoc := XmlNodeChild (XmlGoodsShipment, iNodesIndex);
        IF (XmlNodeName (TransportDoc) = 'do1r:TransportDocs',
          Block(
            iGoodsCount := XmlNodeChildCount (TransportDoc);
            iGoodsIndex := 0;
            WHILE (iGoodsIndex < iGoodsCount,
              Block(
                GoodDoc := XmlNodeChild (TransportDoc, iGoodsIndex);
                IF (XmlNodeName (GoodDoc) = 'do1r:Goods',
                  IF ((XmlNodeValue (XmlNodeFind (GoodDoc, 'catWH_ru:GoodsNumber')) = GoodsNumber)*(Result=0),
                    Result := TransportDoc
                  ) // IF - (XMLNODEVALUE (XmlNodeFind(GoodDoc, 'catWH_ru:GoodsNumber')) = GoodsNumber)*(Result=0) //
                ); // IF - XMLNODENAME (GoodDoc) = 'Goods' //
                iGoodsIndex := iGoodsIndex + 1;
              )
            ); // IF - iGoodsIndex < iGoodsCount //
          )
        ); // IF - XmlNodeName (TransportDoc) = 'TransportDocs' //
        iNodesIndex := iNodesIndex + 1;
      )
    ); // WHILE - iNodesIndex < iNodesCount //
    Result
  )
), // FUNC - FindTransportDocByG32 //


// запись CompletteList
FUNC ('WriteCompletteList', '',
  Block(
    VAR ('strG32', String);

  sSQL := 'SELECT KP.PAPERNAME, KP.PAPERNO, KCP.DOC_COUNTER ' +
      ' FROM KR_C_P KCP LEFT JOIN KR_PAPER KP ON ((KP.PLACEID=KCP.PLACEID)  AND (KP.ID=KCP.ID) AND (KP.COUNTER=KCP.DOC_COUNTER)) ' +
      ' WHERE KCP.G32 IN (' +
            ' SELECT K2.G32 FROM KR_C_P K2 WHERE K2.PLACEID=' + KRD_PAPERS.PLACEID + ' AND K2.ID=' + KRD_PAPERS.ID + ' AND K2.DOC_COUNTER=' + KRD_PAPERS.COUNTER + ' AND K2.DOC_TYPE=13'+
            ')' +
      ' AND KCP.DOC_TYPE=13 AND  KP.PLACEID=' + KRD_PAPERS.PLACEID + ' AND KP.ID=' + KRD_PAPERS.ID + ' AND KCP.DOC_COUNTER <> ' + KRD_PAPERS.COUNTER + ' AND KP.PAPERNAME <> ' +CHAR(39)+ 'ЗПСХ' +CHAR(39);
    OPENQUERY ('qryComm1', 'STS_DB', sSQL, 1);
    VAR ('iPapWayBill', Integer, 0);
    FIRST ('qryComm1');
    WHILE (EOF ('qryComm1') = 0,
      Block(
        iPapWayBill := REFERENCE ('PAPERS', 'PAPERNAME', qryComm1.PAPERNAME, 'PAPER_IS_WAYBILL');
        IF (iPapWaybill = 1,
        block(
          XmlNodeSetValue (XMLNODEADDCHILD (XmlTransportDocs, 'catWH_ru:CompletteList'), qryComm1.PAPERNO); // товар уже есть на другой накладной - добавляем эту в CompletteList
        ));
        Next('qryComm1');
      )
    );

  )
),

// вычисление складского номера
Func('WriteBoxNo', '',
  Block(
    VAR ('sConstStore', String);
    sConstStore := '';
    sBoxNo := '';

    IF ((TRIM (KRD_COMM.BOXNO) <> '') * (FIELDISNULL ('KRD_COMM','BOXNO')=0),
      sBoxNo := KRD_COMM.BOXNO,
      Block(
        IF (BOF ('qConts') = 0, FIRST ('qConts'));
        WHILE (EOF ('qConts') = 0,
          Block(
            IF (qConts.G32 = vG32,
              Block(
                IF (LENGTH (sBoxNo) = 0,
                  sBoxNo := qConts.CONTNO,
                  sBoxNo := sBoxNo + ', ' + qConts.CONTNO
                ); // IF - //
              )
            ); // IF - //
            NEXT ('qConts');
          )
        ); // WHILE - //

        IF (LENGTH (sBoxNo) = 0,
          Block(
            // берем все контейнеры
            IF (LENGTH (sAllConts) = 0,
              sAllConts := UNIONVALUES ('KRD_CONT', ['CONTNO'], ', ', ': ')
            ); // IF - //
            sBoxNo := sAllConts;
          )
        ); // IF - //
      )
    ); // IF - //
  )
), // FUNC - WriteBoxNo() //

// запись накладных
FUNC ('WriteTransportDocs', '',
  Block(
    VAR ('iPapWayBill', Integer, 0);
    FIRST ('KRD_PAPERS');
    WHILE ((EOF ('KRD_PAPERS') = 0) | iFirstPaper,
      Block(
        sPaperCode := KRD_PAPERS.PAPERCODE;
        //iPapWaybill := ( REFERENCE ('PAPERS', 'PAPERNAME', KRD_PAPERS.PAPERNAME, 'PAPER_IS_WAYBILL') | REFERENCE ('PAPERS', 'PAPER_DOCG44_CODE', KRD_PAPERS.PAPERCODE, 'PAPER_IS_WAYBILL'));
        iPapWaybill := (IF (REFERENCE ('PAPERS', 'PAPERNAME', KRD_PAPERS.PAPERNAME, 'PAPER_IS_WAYBILL') = '', 0, REFERENCE ('PAPERS', 'PAPERNAME', KRD_PAPERS.PAPERNAME, 'PAPER_IS_WAYBILL'))
                     | IF (REFERENCE ('PAPERS', 'PAPER_DOCG44_CODE', KRD_PAPERS.PAPERCODE, 'PAPER_IS_WAYBILL') = '', 0, REFERENCE ('PAPERS', 'PAPER_DOCG44_CODE', KRD_PAPERS.PAPERCODE, 'PAPER_IS_WAYBILL')));

        IF ((iPapWayBill = 1)*
                            (LOCATE ('KRD_COMM', 'N_TTN', [KRD_PAPERS.COUNTER]) | iFirstPaper),


          Block(
            // создание transportdocs
              XmlTransportDocs := XmlNodeAddChild (XmlGoodsShipment, 'do1r:TransportDocs');

              IF ((sPaperCode = '02400') * (sTranspCode='40'),  // авиагруз без документов
                XmlNodeSetValues (XmlTransportDocs, '',
                        'catWH_ru:ArrivalCargoWithoutDocsIndicator', 'true'
                ),
                Block( //обычная накладная

                  XmlNodeSetValues (XmlTransportDocs, '',
                        'cat_ru:PrDocumentName',                                              REFERENCE ('PAPERS', 'PAPERNAME', KRD_PAPERS.PAPERNAME, 'PAPERFULLNAME'),
                        'cat_ru:PrDocumentNumber',                                            KRD_PAPERS.PAPERNO,
                        'cat_ru:PrDocumentDate',                                              FDT ('YYYY-MM-DD', KRD_PAPERS.PAPERDATE),
                        'catWH_ru:PresentedDocumentModeCode',                                 sPaperCode
                  );

                  WriteCompletteList();
                  If(KRD_PAPERS.PAPER_REG_NO <> '',
                    XmlNodeSetValues (XmlTransportDocs, '',
                        'catWH_ru:CustomNumber\cat_ru:CustomsCode',                           CUSTOMSNOPART (KRD_PAPERS.PAPER_REG_NO, 1),
                        'catWH_ru:CustomNumber\cat_ru:RegistrationDate',                      FDT ('YYYY-MM-DD', EXCLUDEDATE (KRD_PAPERS.PAPER_REG_NO)),
                        'catWH_ru:CustomNumber\cat_ru:GTDNumber',                             CUSTOMSNOPART (KRD_PAPERS.PAPER_REG_NO, 3),
                        'catWH_ru:CustomNumber\catWH_ru:WaybillNumPP',                        CUSTOMSNOPART (KRD_PAPERS.PAPER_REG_NO, 4)
                    )
                  );
                  EXECUTESQL ('STS_DB', 'UPDATE KRD_MAIN SET G022=' +char(39)+ REMOVECHAR (KRD_MAIN.G022, char(39)) +char(39)+ ' WHERE PLACEID=' + KRD_MAIN.PLACEID + ' AND ID=' + KRD_MAIN.ID);
                  If(KRD_MAIN.G022 <> '',
                    XmlNodeSetValues (XmlTransportDocs, '',
                        'catWH_ru:Consignor\catWH_ru:CountryCode',                            KRD_MAIN.G15A,
                        'catWH_ru:Consignor\catWH_ru:OrganizationName',                       REMOVECHAR (KRD_MAIN.G022, char(39)),
                        'catWH_ru:Consignor\catWH_ru:Address\catWH_ru:AddressLine',           KRD_MAIN.G023

                    )
                  );
                  EXECUTESQL ('STS_DB', 'UPDATE KRD_MAIN SET G082=' +char(39)+ REMOVECHAR (KRD_MAIN.G082, char(39)) +char(39)+ ' WHERE PLACEID=' + KRD_MAIN.PLACEID + ' AND ID=' + KRD_MAIN.ID);
                  XmlNodeSetValues (XmlTransportDocs, '',
                        'catWH_ru:Consignee\cat_ru:OrganizationName',                         REMOVECHAR (KRD_MAIN.G082, char(39))
                  );

                  If(KRD_MAIN.G17A = '643',
                    XmlNodeSetValues (XmlTransportDocs, '',
                        'catWH_ru:Consignee\cat_ru:RFOrganizationFeatures\cat_ru:OGRN',       KRD_MAIN.G08_OGRN,
                        'catWH_ru:Consignee\cat_ru:RFOrganizationFeatures\cat_ru:INN',        KRD_MAIN.G084C,
                        'catWH_ru:Consignee\cat_ru:RFOrganizationFeatures\cat_ru:KPP',        KRD_MAIN.G08_KPP
                    )
                  );

                  XmlNodeSetValues (XmlTransportDocs, '',
                        'catWH_ru:Consignee\catWH_ru:Address\catWH_ru:AddressLine',           KRD_MAIN.G083,
                        'catWH_ru:Consignee\catWH_ru:IdentityCard\cat_ru:IdentityCardCode',   KRD_MAIN.G08_DOC_KIND,
                        'catWH_ru:Consignee\catWH_ru:IdentityCard\cat_ru:IdentityCardName',   KRD_MAIN.G08_DOC_ABBR,
                        'catWH_ru:Consignee\catWH_ru:IdentityCard\cat_ru:IdentityCardSeries', KRD_MAIN.G08_DOC_SERIES,
                        'catWH_ru:Consignee\catWH_ru:IdentityCard\cat_ru:IdentityCardNumber', KRD_MAIN.G08_DOC_NUMBER
                  );

                )
              );
              // товары

              vPlaceID := KRD_COMM.PLACEID;
              vID := KRD_COMM.ID;

              IF (bQContsOpened = 0,
                OpenQConts()
              );

              FIRST ('KRD_COMM');
              WHILE (EOF ('KRD_COMM') = 0,
                Block(
                  vG32 := KRD_COMM.G32;

                  WriteBoxNo();

                  CheckUnlinkedGoods ();

                  IF ((KRD_COMM.N_TTN = KRD_PAPERS.COUNTER) | ((CONVERT (KRD_COMM.N_TTN, String) = '0') * iFirstPaper),
                    Block(
                      sRemark := '';
                      sRemark := REPLACECR (KRD_COMM.REMARK);
                      sRemark := TRIM (sRemark);
                      sValCode := '';
                      sValCode := IF (KRD_COMM.G42_CURRENCY <> '',
                                     IF (CURRENCYABBR (KRD_COMM.G42_CURRENCY) <> '', CURRENCYABBR (KRD_COMM.G42_CURRENCY), KRD_COMM.G42_CURRENCY),
                                     IF (CURRENCYABBR (KRD_MAIN.G221) <> '', CURRENCYABBR (KRD_MAIN.G221), KRD_MAIN.G221)
                      );
                      XmlAcceptanceGood := XmlNodeAddChild (XmlTransportDocs, 'catWH_ru:Goods');

                      // если нет привязки товара к накладной - пишем номер текущей накладной
                      IF (FIELDISNULL ('KRD_COMM', 'N_TTN'), EXECUTESQL ('STS_DB', 'UPDATE KRD_COMM SET N_TTN=' + KRD_PAPERS.COUNTER + ' WHERE PLACEID=' + vPlaceId + ' AND ID=' + vID + ' AND G32=' + KRD_COMM.G32));


                      IF (INIFILE ('XMLKPS', 'WriteFactInfo', '0')= '1',
                        Block( // фактические
                          XmlNodeSetValues (XmlAcceptanceGood, '',
                                    'catWH_ru:GoodsNumber',      KRD_COMM.GN,
                                    'carWH_ru:GoodsTNVEDCode',   KRD_COMM.G33
                          );
                          IF ((FIELDISNULL ('KRD_COMM','FACT_G42') = 0) | (FIELDISNULL ('KRD_COMM','G42')=0),
                            XmlNodeSetValues (XmlAcceptanceGood, '',
                                    'catWH_ru:InvoiceCost',      IF (KRD_COMM.FACT_G42>0, FLOATROUND (KRD_COMM.FACT_G42,2), FLOATROUND (KRD_COMM.G42,2)),
                                    'catWH_ru:CurrencyCode',     sValCode
                            )
                          );

                          IF(vMPOSign = 0,
                            Block( //Описание товара
                              // разбиваем описание на много строк по 150 символов
                              VAR ('sGoodsDescr', Memo, KRD_COMM.G312);
                              sGoodsDescr := TRIM(sGoodsDescr);
                              IF (LENGTH (sGoodsDescr) > 250,
                                Block(
                                  XmlNodeSetValues (XmlAcceptanceGood, '',
                                            'catWH_ru:GoodsDescription', IF (LENGTH (sGoodsDescr) <= 150, sGoodsDescr, COPY (sGoodsDescr, 1, 150));
                                  ); // XmlNodeSetValues - //

                                  WHILE (Length (sGoodsDescr) > 0,
                                    Block(
                                      sGoodsDescr := DELETE (sGoodsDescr, 1, 150);
                                      IF (LENGTH (sGoodsDescr) > 0,
                                        XmlNodeSetValue (XMLNODEADDCHILD (XmlAcceptanceGood, 'catWH_ru:GoodsDescription'),  IF (LENGTH (sGoodsDescr) <= 150, sGoodsDescr, COPY (sGoodsDescr, 1, 150)))
                                      ); // IF - //
                                    )
                                  ); // WHILE - //

                                ),
                                Block(
                                  XmlNodeSetValues (XmlAcceptanceGood, '', 'catWH_ru:GoodsDescription', sGoodsDescr);
                                )
                              ); // IF - //
                            ),
                            If(vMPOSign = 1,
                              BLOCK(
                                                //Номер МПО
                                XmlNodeSetValues (XmlAcceptanceGood, 'catWH_ru:MPONumber',
                                            'catWH_ru:ServiceIndicator',  KRD_COMM.ServiceIndicator,
                                            'catWH_ru:SerialNumber',      KRD_COMM.SerialNumber,
                                            'catWH_ru:CountryCode',       if(FIELDISNULL('KRD_COMM','G34')=0, REFERENCE('OKSMT', 'KOD', KRD_COMM.G34, 'ABC2'), '00')
                                );
                                      //Номер емкости, в которой находится МПО
                                XmlNodeSetValues (XmlAcceptanceGood, '',
                                          'catWH_ru:MPOCaseNum', KRD_COMM.MPOCaseNum
                                );
                              )
                            )
                          );

                          // Сведения о грузовых местах (CargoPlace)
                          XmlAcceptanceGoodCargoPlace := 0;
                          IF ((FIELDISNULL ('KRD_COMM', 'FACT_G311') = 0) | (FIELDISNULL ('KRD_COMM', 'G311') = 0),
                            Block (
                              IF (XmlAcceptanceGoodCargoPlace = 0,
                                XmlAcceptanceGoodCargoPlace := XMLNodeAddChild (XmlAcceptanceGood, 'catWH_ru:CargoPlace')
                              );
                              XmlNodeSetValues (XmlAcceptanceGoodCargoPlace, '',
                                        'catWH_ru:PlaceNumber',  IF (KRD_COMM.FACT_G311 > 0, KRD_COMM.FACT_G311, IF (FIELDISNULL ('KRD_COMM', 'G311') = 0, KRD_COMM.G311))
                              );
                            )
                          ); // IF
                          IF (FIELDISNULL ('KRD_COMM', 'G313_CODE') = 0,
                            Block (
                              IF (XmlAcceptanceGoodCargoPlace = 0,
                                XmlAcceptanceGoodCargoPlace := XMLNodeAddChild (XmlAcceptanceGood, 'catWH_ru:CargoPlace')
                              );
                              XmlNodeSetValues (XmlAcceptanceGoodCargoPlace, '',
                                        'catWH_ru:PackageCode',      KRD_COMM.G313_CODE,
                              );
                            )
                          ); // IF
                          IF (FIELDISNULL ('KRD_COMM', 'G313') = 0,
                            Block (
                              IF (XmlAcceptanceGoodCargoPlace = 0,
                                XmlAcceptanceGoodCargoPlace := XMLNodeAddChild (XmlAcceptanceGood, 'catWH_ru:CargoPlace')
                              );
                              XmlNodeSetValues (XmlAcceptanceGoodCargoPlace, '',
                                        'catWH_ru:PlaceDescription', COPY (KRD_COMM.G313, 1, 40)
                              );
                            )
                          ); // IF



                          IF ((FIELDISNULL ('KRD_COMM', 'FACT_G35') = 0) | (FIELDISNULL ('KRD_COMM', 'G35') = 0),
                            Block (
                              XmlAcceptanceGoodBruttoVolQuant := XMLNodeAddChild (XmlAcceptanceGood, 'catWH_ru:BruttoVolQuant');
                              XmlNodeSetValues (XmlAcceptanceGoodBruttoVolQuant, '',
                                        'catWH_ru:GoodsQuantity',            IF (KRD_COMM.FACT_G35 > 0, KRD_COMM.FACT_G35, KRD_COMM.G35),
                                        'catWH_ru:MeasureUnitQualifierName', 'КГ',
                                        'catWH_ru:MeasureUnitQualifierCode', '166'
                              );
                            )
                          ); // IF

                          IF ((KRD_COMM.G315A > 0)|(KRD_COMM.G315C > 0), XmlAcceptanceGoodMeasureQuantity := XmlNodeAddChild (XmlAcceptanceGood, 'catWH_ru:MeasureQuantity'));
                           IF (KRD_COMM.G315A > 0,
                            XmlNodeSetValues(XmlAcceptanceGoodMeasureQuantity, '',
                                    'catWH_ru:GoodsQuantity',            KRD_COMM.G315A,
                                    'catWH_ru:MeasureUnitQualifierName', IF (KRD_COMM.G41A <> '', REFERENCE ('UNITS', 'UNITCODE', KRD_COMM.G41A, 'UNITNAME'), ''),
                                    'catWH_ru:MeasureUnitQualifierCode', KRD_COMM.G41A,
                            )
                          );
                          IF (KRD_COMM.G315C > 0,
                            XmlNodeSetValues (XmlAcceptanceGoodMeasureQuantity, '',
                                      'catWH_ru:GoodsQuantity',            KRD_COMM.G315C,
                                      'catWH_ru:MeasureUnitQualifierName', IF (KRD_COMM.G31_82 <> '', REFERENCE ('UNITS', 'UNITCODE', KRD_COMM.G31_82, 'UNITNAME'), ''),
                                      'catWH_ru:MeasureUnitQualifierCode', KRD_COMM.G31_82,
                            )
                          ); // IF - KRD_COMM.G315C > 0 //



                          // складской номер
                          XmlNodeSetValues (XmlAcceptanceGood, '',
                                    'catWH_ru:GoodsWHNumber',  Copy(TRIM(sBoxNo), 1, 255)
                          );
                          XmlNodeSetValues (XmlAcceptanceGood, '', 'catWH_ru:Comments', sREMARK);


                          IF ((KRD_COMM.SVHAREA <> '') | (KRD_COMM.SQUARE > 0) | (KRD_COMM.SVHCOMMENT <> '') | (KRD_COMM.SVHHANGAR <> '') | (KRD_COMM.SVHRACK <> '') | (KRD_COMM.SVHCELL <> ''),
                            Block(
                              XmlNodeSetValues (XmlAcceptanceGoodKeepingPlace, 'catWH_ru:KeepingPlace',
                                        'catWH_ru:Area',      KRD_COMM.SVHAREA,
                                        'catWH_ru:Square',    IF(KRD_COMM.SQUARE > 0, KRD_COMM.SQUARE, ''),
                                        'catWH_ru:Comments',  KRD_COMM.SVHCOMMENT,
                                        'catWH_ru:Angar',     KRD_COMM.SVHHANGAR,
                                        'catWH_ru:WHPackind', KRD_COMM.SVHRACK,
                                        'catWH_ru:Cell',      KRD_COMM.SVHCELL
                              );
                            )
                          ); // IF - //

                          XmlAcceptanceGoodKeepingLimit := XmlNodeAddChild (XmlAcceptanceGood, 'catWH_ru:KeepingLimit');
                          XmlNodeSetValues (XmlAcceptanceGoodKeepingLimit, '',
                                    'catWH_ru:AcceptDate', FDT ('YYYY-MM-DD', IF (KRD_COMM.ACCEPTDATE, KRD_COMM.ACCEPTDATE, KRD_MAIN.BEG_KEEP)),
                                    'catWH_ru:AcceptTime', FDT ('HH:MM:SS', IF (KRD_COMM.ACCEPTDATE, KRD_COMM.ACCEPTDATE, KRD_MAIN.BEG_KEEP)),
                                    'catWH_ru:StoringDateType', KRD_COMM.STORAGE_TYPE,
                                    'catWH_ru:DeadLineDate', FDT ('YYYY-MM-DD', IF (KRD_COMM.STORAGE_DATE, KRD_COMM.STORAGE_DATE,
                                                              IF (KRD_COMM.STORE_PERIOD, KRD_MAIN.BEG_KEEP + KRD_COMM.STORE_PERIOD)))
                          );
                        ),
                        Block( // документальные
                          XmlNodeSetValues (XmlAcceptanceGood, '',
                                    'catWH_ru:GoodsNumber',      KRD_COMM.GN,
                                    'catWH_ru:GoodsTNVEDCode',   KRD_COMM.G33
                          );
                          IF(FIELDISNULL('KRD_COMM','G42')=0,
                            XmlNodeSetValues (XmlAcceptanceGood, '',
                                    'catWH_ru:InvoiceCost',      KRD_COMM.G42,
                                    'catWH_ru:CurrencyCode',     sValCode
                            )
                          );
                          IF(vMPOSign = 0,
                            Block( //Описание товара
                              // разбиваем описание на много строк по 150 символов
                              VAR ('sGoodsDescr', Memo, KRD_COMM.G312);
                              sGoodsDescr := TRIM (sGoodsDescr);
                              IF (LENGTH (sGoodsDescr) > 250,
                                Block(
                                  XmlNodeSetValues (XmlAcceptanceGood, '',
                                            'catWH_ru:GoodsDescription', IF (LENGTH (sGoodsDescr) <= 150, sGoodsDescr, COPY (sGoodsDescr, 1, 150));
                                  );

                                  WHILE (LENGTH (sGoodsDescr) > 0,
                                    Block(
                                      sGoodsDescr := DELETE (sGoodsDescr, 1, 150);
                                      IF (LENGTH (sGoodsDescr) > 0,
                                        XmlNodeSetValue (XMLNODEADDCHILD (XmlAcceptanceGood, 'catWH_ru:GoodsDescription'),  IF (LENGTH (sGoodsDescr) <= 150, sGoodsDescr, COPY (sGoodsDescr, 1, 150)))
                                      ); // IF - //
                                    )
                                  ); // WHILE - //

                                ),
                                Block(
                                  XmlNodeSetValues (XmlAcceptanceGood, '', 'catWH_ru:GoodsDescription', sGoodsDescr);
                                )
                              ); // IF - //
                            ),
                            If(vMPOSign = 1,
                              BLOCK(
                                //Номер МПО
                                XmlNodeSetValues (XmlAcceptanceGood, 'catWH_ru:MPONumber',
                                            'catWH_ru:ServiceIndicator',  KRD_COMM.ServiceIndicator,
                                            'catWH_ru:SerialNumber',      KRD_COMM.SerialNumber,
                                            'catWH_ru:CountryCode',       if(FIELDISNULL('KRD_COMM','G34')=0, REFERENCE('OKSMT', 'KOD', KRD_COMM.G34, 'ABC2'), '00')
                                );
                                //Номер емкости, в которой находится МПО
                                XmlNodeSetValues (XmlAcceptanceGood, '',
                                          'catWH_ru:MPOCaseNum', KRD_COMM.MPOCaseNum
                                );
                              )
                            )
                          );

                          // Сведения о грузовых местах (CargoPlace)
                          XmlAcceptanceGoodCargoPlace := 0;
                          IF (FIELDISNULL ('KRD_COMM', 'G311') = 0,
                            Block (
                              IF (XmlAcceptanceGoodCargoPlace = 0,
                                XmlAcceptanceGoodCargoPlace := XMLNodeAddChild (XmlAcceptanceGood, 'catWH_ru:CargoPlace')
                              );
                              XmlNodeSetValues (XmlAcceptanceGoodCargoPlace, '',
                                        'catWH_ru:PlaceNumber',      IF (FIELDISNULL ('KRD_COMM', 'G311') = 0, KRD_COMM.G311)
                              );
                            )
                          ); // IF
                          IF (FIELDISNULL ('KRD_COMM', 'G313_CODE') = 0,
                            Block (
                              IF (XmlAcceptanceGoodCargoPlace = 0,
                                XmlAcceptanceGoodCargoPlace := XMLNodeAddChild (XmlAcceptanceGood, 'catWH_ru:CargoPlace')
                              );
                              XmlNodeSetValues (XmlAcceptanceGoodCargoPlace, '',
                                        'catWH_ru:PackageCode',      KRD_COMM.G313_CODE
                              );
                            )
                          ); // IF
                          IF (FIELDISNULL ('KRD_COMM', 'G313') = 0,
                            Block (
                              IF (XmlAcceptanceGoodCargoPlace = 0,
                                XmlAcceptanceGoodCargoPlace := XMLNodeAddChild (XmlAcceptanceGood, 'catWH_ru:CargoPlace')
                              );
                              XmlNodeSetValues (XmlAcceptanceGoodCargoPlace, '',
                                        'catWH_ru:PlaceDescription', COPY (KRD_COMM.G313, 1, 40)
                              );
                            )
                          ); // IF


                          IF (FIELDISNULL ('KRD_COMM', 'G35') = 0,
                            Block (
                              XmlAcceptanceGoodBruttoVolQuant := XMLNodeAddChild (XmlAcceptanceGood, 'catWH_ru:BruttoVolQuant');
                              XmlNodeSetValues (XmlAcceptanceGoodBruttoVolQuant, '',
                                        'catWH_ru:GoodsQuantity',            KRD_COMM.G35,
                                        'catWH_ru:MeasureUnitQualifierName', 'КГ',
                                        'catWH_ru:MeasureUnitQualifierCode', '166'
                              );
                            )
                          ); // IF

                          IF ((KRD_COMM.G315A > 0)|(KRD_COMM.G315C > 0), XmlAcceptanceGoodMeasureQuantity := XmlNodeAddChild (XmlAcceptanceGood, 'catWH_ru:MeasureQuantity'));
                           IF (KRD_COMM.G315A > 0,
                            XmlNodeSetValues(XmlAcceptanceGoodMeasureQuantity, '',
                                    'catWH_ru:GoodsQuantity',            KRD_COMM.G315A,
                                    'catWH_ru:MeasureUnitQualifierName', IF (KRD_COMM.G41A <> '', REFERENCE ('UNITS', 'UNITCODE', KRD_COMM.G41A, 'UNITNAME'), ''),
                                    'catWH_ru:MeasureUnitQualifierCode', KRD_COMM.G41A,
                            )
                          );
                          IF (KRD_COMM.G315C > 0,
                            XmlNodeSetValues (XmlAcceptanceGoodMeasureQuantity, '',
                                      'catWH_ru:GoodsQuantity',            KRD_COMM.G315C,
                                      'catWH_ru:MeasureUnitQualifierName', IF (KRD_COMM.G31_82 <> '', REFERENCE ('UNITS', 'UNITCODE', KRD_COMM.G31_82, 'UNITNAME'), ''),
                                      'catWH_ru:MeasureUnitQualifierCode', KRD_COMM.G31_82,
                            )
                          ); // IF - KRD_COMM.G315C > 0 //

                          // складской номер
                          XmlNodeSetValues (XmlAcceptanceGood, '',
                                    'catWH_ru:GoodsWHNumber',        Copy(TRIM(sBoxNo), 1, 255)
                          );
                          XmlNodeSetValues (XmlAcceptanceGood, '', 'catWH_ru:Comments', sREMARK);


                          IF ((KRD_COMM.SVHAREA <> '') | (KRD_COMM.SQUARE > 0) | (KRD_COMM.SVHCOMMENT <> '') | (KRD_COMM.SVHHANGAR <> '') | (KRD_COMM.SVHRACK <> '') | (KRD_COMM.SVHCELL <> ''),
                            Block(
                              XmlNodeSetValues (XmlAcceptanceGood, 'catWH_ru:KeepingPlace',
                                        'catWH_ru:Area',      KRD_COMM.SVHAREA,
                                        'catWH_ru:Square',    IF(KRD_COMM.SQUARE > 0, KRD_COMM.SQUARE, ''),
                                        'catWH_ru:Comments',  KRD_COMM.SVHCOMMENT,
                                        'catWH_ru:Angar',     KRD_COMM.SVHHANGAR,
                                        'catWH_ru:WHPackind', KRD_COMM.SVHRACK,
                                        'catWH_ru:Cell',      KRD_COMM.SVHCELL
                              );
                            )
                          ); // IF - //
                          XmlAcceptanceGoodKeepingLimit := XmlNodeAddChild (XmlAcceptanceGood, 'catWH_ru:KeepingLimit');
                          XmlNodeSetValues (XmlAcceptanceGoodKeepingLimit, '',
                                    'catWH_ru:AcceptDate',      FDT ('YYYY-MM-DD', IF (KRD_COMM.ACCEPTDATE, KRD_COMM.ACCEPTDATE, KRD_MAIN.BEG_KEEP)),
                                    'catWH_ru:AcceptTime',      FDT ('HH:MM:SS', IF (KRD_COMM.ACCEPTDATE, KRD_COMM.ACCEPTDATE, KRD_MAIN.BEG_KEEP)),
                                    'catWH_ru:StoringDateType', KRD_COMM.STORAGE_TYPE,
                                    'catWH_ru:DeadLineDate',    FDT ('YYYY-MM-DD', IF (KRD_COMM.STORAGE_DATE, KRD_COMM.STORAGE_DATE,
                                                                IF (KRD_COMM.STORE_PERIOD, KRD_MAIN.BEG_KEEP + KRD_COMM.STORE_PERIOD)))
                          );
                        )
                      ); // IF - INIFILE ('XMLKPS', 'WriteFactInfo', '0')= '1' //

                      XmlNodeSetValues (XmlAcceptanceGood, '', 'catWH_ru:Comments', sREMARK);
                    )
                  );

                  NEXT('KRD_COMM');
                )
              ); // WHILE - EOF('KRD_COMM') = 0 //

              //  контейнера
              FIRST ('KRD_CONT');
              WHILE (EOF ('KRD_CONT') = 0,
                BLOCK (
                  IF ((KRD_CONT.N_TTN = KRD_PAPERS.COUNTER) | ((KRD_CONT.N_TTN = 0) & BOF ('KRD_CONT'))|(RECORDCOUNT ('KRD_CONT')=1),
                    Block(
                      sSQL := 'SELECT PLACEID FROM KR_C_P WHERE PLACEID=' + KRD_CONT.PLACEID +
                              ' AND ID=' + KRD_CONT.ID +
                              ' AND DOC_COUNTER=' + KRD_CONT.COUNTER +
                              ' AND DOC_TYPE=11';
                      OPENQUERY ('qKCommPapers', 'STS_DB', sSQL);
                      IF (FIELDISNULL ('qKCommPapers', 'PLACEID'),
                        Block(
                          iMultiGoods := (RECORDCOUNT ('KRD_CONT') = 1) & (RECORDCOUNT ('KRD_COMM') > 1);
                        ),
                        Block(
                          //iMultiGoods := (RECORDCOUNT ('KRD_COMM_PAPERS') > 1);
                          iMultiGoods := (RECORDCOUNT ('qKCommPapers') > 1);
                        )
                      ); // IF - FIELDISNULL ('KRD_COMM_PAPERS', 'PLACEID') //
                      CLOSEDATASET ('qKCommPapers');

                      XMLTransportDocsConatiners := XMLNodeAddChild (XmlTransportDocs, 'catWH_ru:Containers');

                      XmlNodeSetValues (XMLTransportDocsConatiners, '',
                                'catWH_ru:ContainerNumber',     KRD_CONT.CONTNO,
                                'catWH_ru:GrossWeightQuantity', KRD_CONT.G35
                      );
                    ),
                  );

                  //Если это не первый контейнер и он не привязан к ТСД
                  IF((KRD_CONT.N_TTN = 0) & (BOF ('KRD_CONT') <> 1) & BOF ('KRD_PAPERS'),
                    Block(
                      XMLTransportDocsConatiners := XMLNodeAddChild (XmlTransportDocs, 'catWH_ru:Containers');
                      XmlNodeSetValues(XMLTransportDocsConatiners, '',
                                'catWH_ru:ContainerNumber',     KRD_CONT.CONTNO,
                                'catWH_ru:GrossWeightQuantity', KRD_CONT.G35
                      );

                      IF ((KRD_CONT.SVHCOMMENT <> '') | (KRD_CONT.SVHAREA > 0) | (KRD_CONT.SVHHANGAR <> '') | (KRD_CONT.SVHPARKING <> '') | (KRD_CONT.SVHSQR > 0),
                        Block(
                          XMLTransportDocsConatinersKeepingPlace := XMLNodeAddChild (XmlTransportDocsConatiners, 'catWH_ru:KeepingPlace');
                          XmlNodeSetValues(XMLTransportDocsConatinersKeepingPlace, '',
                                    'catWH_ru:Comments', KRD_CONT.SVHCOMMENT,
                                    'catWH_ru:Area',     KRD_CONT.SVHAREA,
                                    'catWH_ru:Angar',    KRD_CONT.SVHHANGAR,
                                    'catWH_ru:Parking',  KRD_CONT.SVHPARKING,
                                    'catWH_ru:Square',   IF (KRD_CONT.SVHSQR > 0, KRD_CONT.SVHSQR, '')
                          );
                        )
                      ); // IF - //
                    )
                  ); // IF - (KRD_CONT.N_TTN = 0) & (BOF ('KRD_CONT') <> 1) & BOF ('KRD_PAPERS') //
                  NEXT ('KRD_CONT')
                )
              ); // WHILE - EOF ('KRD_CONT') = 0 //

              // конец контейнеров
              // связи товаров с контейнерами
              WriteGoodContLinks();

               // end создания transportdocs
          )   //end waybill
        );
        iFirstPaper := 0;
        NEXT('KRD_PAPERS');
      )
    ) // WHILE - (EOF ('KRD_PAPERS') = 0) | iFirstPaper //

  )
),

//Связи товаров с контейнерами
Func('WriteGoodContLinks', ,
  Block(
    sSQL := 'SELECT KC.N_TTN_G32, KCP.G32, KCP.DOC_COUNTER, KCT.N_CONT ' +
            ' FROM KR_C_P KCP ' +
            ' LEFT JOIN KRD_COMM KC ON KC.PLACEID=KCP.PLACEID AND KC.ID=KCP.ID AND KC.G32=KCP.G32 ' +
            ' LEFT JOIN KRD_CONT KCT ON KCT.PLACEID=KCP.PLACEID AND KCT.ID=KCP.ID AND KCT.COUNTER=KCP.DOC_COUNTER ' +
            ' WHERE KCP.PLACEID=' + KRD_COMM.PLACEID + ' AND KCP.ID=' + KRD_COMM.ID + ' AND KCP.DOC_TYPE=11 ' +
            ' AND KC.N_TTN=' + KRD_PAPERS.COUNTER +
            ' ORDER BY KCP.G32, KCP.DOC_COUNTER';
    OPENQUERY ('qGoodContLinks', 'STS_DB', sSQL, 1);
    WHILE (EOF ('qGoodContLinks') = 0,
      Block(
        XmlNodeSetValues (XmlNOdeAddChild (XmlTransportDocs, 'catWH_ru:GoodContLinks'),
                         '',
                         'catWH_ru:GoodNumber',      qGoodContLinks.N_TTN_G32,
                         'catWH_ru:ContainerNumber', qGoodContLinks.N_CONT
        ); // XMLNODESETVALUES
        NEXT ('qGoodContLinks');
      )
    ); // WHILE
    CLOSEDATASET ('qGoodContLinks');

{
    FIRST ('KRD_COMM');
    WHILE (EOF ('KRD_COMM') = 0,
      Block(
        IF ((KRD_COMM.N_TTN = KRD_PAPERS.COUNTER) | ((CONVERT (KRD_COMM.N_TTN, String) = '0') * iFirstPaper),
          Block(
        vPlaceID := KRD_COMM.PLACEID;
        vID := KRD_COMM.ID;
       //Связи товаров с контейнерами
            sSQL := 'SELECT * FROM KRD_CONT WHERE PLACEID=' + vPlaceId +
                    ' AND ID=' + vId +
                    ' AND N_TTN=' + KRD_PAPERS.COUNTER;

            OPENQUERY ('qKCont', 'STS_DB', sSQL, 1);
            IF (BOF ('qKCont') = 0, FIRST ('qKCont'));
            WHILE (EOF ('qKCont') = 0,
              Block(
                sSQL := 'SELECT PLACEID FROM KR_C_P WHERE PLACEID=' + vPlaceId +
                        ' AND ID=' + vId +
                        ' AND G32=' + KRD_COMM.G32 +
                        ' AND DOC_TYPE=11' +
                        ' AND DOC_COUNTER=' + qKCont.COUNTER;
                OPENQUERY ('qKCommPapersM', 'STS_DB', sSQL, 1);
                IF (FIELDISNULL ('qKCommPapersM', 'PLACEID') = 0,
          Block(
                    XmlNodeSetValues (XmlNodeAddChild (XmlTransportDocs, 'catWH_ru:GoodContLinks'),
                                     '',
            'catWH_ru:GoodNumber',      KRD_COMM.N_TTN_G32,
                                     'catWH_ru:ContainerNumber', qKCont.N_CONT,
                    ); // XMLNODESETVALUES
              ),
                Block(
                    sSQL := 'SELECT PLACEID FROM KR_C_P WHERE PLACEID=' + vPlaceId +
                            ' AND ID=' + vId +
                            ' AND DOC_TYPE=11' +
                            ' AND DOC_COUNTER=' + qKCont.COUNTER;
                    OPENQUERY ('qKCommPapers', 'STS_DB', sSQL, 1);
                    IF (FIELDISNULL ('qKCommPapers', 'PLACEID'),
                      Block(
                        XmlNodeSetValues (XmlNodeAddChild (XmlTransportDocs, 'catWH_ru:GoodContLinks'),
                                         '',
                            'catWH_ru:GoodNumber',      KRD_COMM.N_TTN_G32,
                                         'catWH_ru:ContainerNumber', qKCont.N_CONT,
                        ); // XMLNODESETVALUES
                )
              ); // IF - LOCATE ('KRD_COMM_PAPERS', ['PLACEID;ID;DOC_TYPE;DOC_COUNTER'], [vPlaceID, vID, '11', KRD_CONT.COUNTER]) = 0 //
                    CLOSEDATASET ('qKCommPapers');
                  )
            );
                CLOSEDATASET ('qKCommPapersM');
                //NEXT('KRD_CONT');
                NEXT ('qKCont');
          )
            ); // WHILE - EOF ('KRD_CONT') = 0
            CLOSEDATASET ('qKCont');
          )
        );
        NEXT('KRD_COMM');
      )
    ); // WHILE - EOF('KRD_COMM') = 0
}
  )

),

// запись таможенных документов
FUNC ('WriteCustomsDocs', '',
  Block(
    // запись CustomDocs
    FIRST('KRD_DCD');
    WHILE(EOF('KRD_DCD') = 0,
      Block(
        sPaperCode := KRD_DCD.PAPERCODE;
        IF ((KRD_DCD.PAPERCODE <> '') * (KRD_DCD.PAPERNO <> ''),
          Block(
            IF (STRPOS (KRD_DCD.PAPERCODE + KRD_DCD.PAPERNO, wCustomDoc) = 0,
              XmlNodeSetValues (XmlNodeAddChild (XmlGoodsShipment, 'do1r:CustomsDocs'), '',
                        'cat_ru:PrDocumentName',   KRD_DCD.PAPERNAME,
                        'cat_ru:PrDocumentNumber', KRD_DCD.PAPERNO,
                        'cat_ru:PrDocumentDate',   FDT ('YYYY-MM-DD', KRD_DCD.PAPERCLOSE),
                        'catWH_ru:DocumentCode',   KRD_DCD.PAPERCODE,
                        'catWH_ru:VttCustomsCode', KRD_DCD.CUSTOMS_CODE
              );
            ); // IF - STRPOS(KRD_DCD.PAPERCODE + KRD_DCD.PAPERNO, wCustomDoc) = 0 //
          )
        ); // IF - //
        IF (wCustomDoc <> '', wCustomDoc := wCustomDoc + '|'); // IF - wCustomDoc <> '' //
        wCustomDoc := wCustomDoc + KRD_DCD.PAPERCODE + KRD_DCD.PAPERNO;
        NEXT('KRD_DCD');
      )
    ); // WHILE - EOF('KRD_DCD') = 0 //

  )
),


// запись коммерческих документов
FUNC ('WriteCommerceDocs', '',
  Block(
    VAR ('iPapWayBill', Integer, 0);
    FIRST ('KRD_PAPERS');
    WHILE ((EOF ('KRD_PAPERS') = 0) | iFirstPaper,
      Block(
        sPaperCode := KRD_PAPERS.PAPERCODE;
        iPapWaybill := (if (REFERENCE ('PAPERS', 'PAPERNAME', KRD_PAPERS.PAPERNAME, 'PAPER_IS_WAYBILL')='',0,REFERENCE ('PAPERS', 'PAPERNAME', KRD_PAPERS.PAPERNAME, 'PAPER_IS_WAYBILL'))
                     | if (REFERENCE ('PAPERS', 'PAPER_DOCG44_CODE', KRD_PAPERS.PAPERCODE, 'PAPER_IS_WAYBILL')='',0,REFERENCE ('PAPERS', 'PAPER_DOCG44_CODE', KRD_PAPERS.PAPERCODE, 'PAPER_IS_WAYBILL')));
        
        //IF (Length(sPaperCode) = 4, sPaperCode := '0'+sPaperCode); // времянка, использовали при отсутствии справочника 5-значных кодов
{        IF ((iPapWayBill = 1)*
                            (LOCATE ('KRD_COMM', 'N_TTN', [KRD_PAPERS.COUNTER]) | iFirstPaper),

          Block(
          ),}
          // Коммерческие документы и Complette List
          IF (iPapWayBill = 1,
            Block(
              cmplxG32 := 0;

              sSQL := 'SELECT PLACEID FROM KR_C_P WHERE DOC_COUNTER=' + KRD_PAPERS.COUNTER +
                      ' AND PLACEID=' + KRD_PAPERS.PLACEID +
                      ' AND ID=' + KRD_PAPERS.ID +
                      ' AND DOC_TYPE=13';
              OPENQUERY ('qKCommPapers', 'STS_DB', sSQL, 1);

              sSQL := 'SELECT PLACEID FROM KRD_COMM WHERE N_TTN=' + KRD_PAPERS.COUNTER +
                      ' AND PLACEID=' + KRD_PAPERS.PLACEID +
                      ' AND ID=' + KRD_PAPERS.ID;
              OPENQUERY ('qKCommNTTN', 'STS_DB', sSQL, 1);
              IF (FIELDISNULL ('qKCommPapers', 'PLACEID') * FIELDISNULL ('qKCommNTTN', 'PLACEID'),
                Block(
                  cmplxG32 := 0;
                  IF (KRD_PAPERS.PAPERNAME <> 'ЗПСХ',
                    Block(
                    XmlNodeSetValues (XmlNodeAddChild (XmlGoodsShipment, 'do1r:CommerceDocs'), '',
                            'cat_ru:PrDocumentName',              REFERENCE ('PAPERS', 'PAPERNAME', KRD_PAPERS.PAPERNAME, 'PAPERFULLNAME'),
                          'cat_ru:PrDocumentNumber',            KRD_PAPERS.PAPERNO,
                          'cat_ru:PrDocumentDate',              FDT ('YYYY-MM-DD', KRD_PAPERS.PAPERDATE),
                          'catWH_ru:PresentedDocumentModeCode', sPaperCode,
                    );
                    )
                  ); // IF - KRD_PAPERS.PAPERNAME <> 'ЗПСХ' //
                )
              ); // IF - FIELDISNULL ('KRD_COMM_PAPERS', 'PLACEID')
              CLOSEDATASET ('qKCommNTTN');
              CLOSEDATASET ('qKCommPapers');
            ),
            Block(
              IF (KRD_PAPERS.PAPERNAME <> 'ЗПСХ',
                Block(
                XmlNodeSetValues (XmlNodeAddChild (XmlGoodsShipment, 'do1r:CommerceDocs'), '',
                            'cat_ru:PrDocumentName',              REFERENCE ('PAPERS', 'PAPERNAME', KRD_PAPERS.PAPERNAME, 'PAPERFULLNAME'),
                          'cat_ru:PrDocumentNumber',            KRD_PAPERS.PAPERNO,
                          'cat_ru:PrDocumentDate',              FDT ('YYYY-MM-DD', KRD_PAPERS.PAPERDATE),
                          'catWH_ru:PresentedDocumentModeCode', sPaperCode,
                );
                )
              ); // IF - KRD_PAPERS.PAPERNAME <> 'ЗПСХ' //
            )
         // )
        );
        iFirstPaper := 0;
        NEXT('KRD_PAPERS');
      )
    ) // WHILE - (EOF ('KRD_PAPERS') = 0) | iFirstPaper //

  )
),

// запись представленных документов
FUNC ('WritePresentedDocs', '',
  Block(
    IF (KRD_MAIN.DO1ACCOMPANYINGDOCUMENT = 1,
      Block(
        XMLNODESETVALUE (XMLNODEADDCHILD (XmlGoodsShipment, 'do1r:DO1AccompanyingDocument'), KRD_MAIN.DO1ACCOMPANYINGDOCUMENT);
      ),
      Block(
        IF (LENGTH (TRIM (KRD_MAIN.PP)) > 0,
          Block(
              XmlNodeSetValues (XmlNodeAddChild (XmlGoodsShipment, 'do1r:PresentedDocuments'), '',
                      'cat_ru:CustomsCode',      CUSTOMSNOPART (KRD_MAIN.PP, 1, ''),
                      'cat_ru:RegistrationDate', FDT('YYYY-MM-DD', EXCLUDEDATE (KRD_MAIN.PP)),
                      'cat_ru:GTDNumber',        CUSTOMSNOPART (KRD_MAIN.PP, 3, '')
              );
          )
        ); // IF - LENGTH (TRIM (KRD_MAIN.PP)) > 0 //
      )
    ); // IF - KRD_MAIN.DO1ACCOMPANYINGDOCUMENT = 1 //
  )
),



FUNC ('WriteBills', PARAM ('pTypeOfDocuments', Integer, 0),
  BLOCK (
    VAR ('XmlTransportDocs', Integer);
    VAR ('XMLTransportDocsCustomNumber', Integer);
    VAR ('XMLTransportDocsConsignor', Integer);
    VAR ('XMLTransportDocsConsignorAddress', Integer);
    // Поклажедатель
    VAR ('XMLTransportDocsBailor', Integer);
    VAR ('XMLTransportDocsBailorAddress', Integer);
    VAR ('bLoadBailor', Boolean, INIFILE ('XMLKPS', 'LoadBailor', '0'));

    VAR ('XMLTransportDocsConsignee', Integer);
    VAR ('XMLTransportDocsConsigneeAddress', Integer);
    VAR ('XMLTransportDocsConsigneeIdentityCard', Integer);
    VAR ('XMLTransportDocsConatiners', Integer);
    VAR ('XMLTransportDocsConatinersKeepingPlace', Integer);
    VAR ('XmlAcceptanceGood', Integer);
    VAR ('XmlAcceptanceGoodCargoPlace', Integer);
    VAR ('XmlAcceptanceGoodBruttoVolQuant', Integer);
    VAR ('XmlAcceptanceGoodKeepingPlace', Integer);
    VAR ('XmlAcceptanceGoodKeepingLimit', Integer);
    VAR ('XmlAcceptanceGoodMeasureQuantity', Integer);
    VAR ('XmlCustomsControls', Integer);
    VAR ('iFirstPaper', Integer, 1);
    VAR ('iContCounter', Integer, 0);
    VAR ('sAddUnitsCode', String, '');
    VAR ('sAddUnitsName', String, '');
    VAR ('dAddUnitsAmount', Float, 0);
    VAR ('iMultiGoods', Integer, 0);
    VAR ('sRemark', String, '');
    VAR ('isNoAddedComm', Integer, 0); // признак добавлен ли уже такой товар в XML
    VAR ('cmplxG32', Integer, 0); // номер комплектного товара
    VAR ('sPaperCode', String, '');
    VAR ('sValCode', String, '');


    CASE (pTypeOfDocuments, [1, WriteTransportDocs(),
                             2, WriteCustomsDocs(),
                             3, WriteCommerceDocs(),
                            ],
                            Block(
                              WriteTransportDocs();
                              WriteCustomsDocs();
                              WriteCommerceDocs();
                            )
    ); // CASE - //


)), // FUNC - WriteBills() //

FUNC ('WriteShippingDocsMismatch', '',
  Block(
    XMLNodeSetValues (XmlAcceptanceGood, 'do1r:ShippingDocsMismatch',
                                         'do1r:Kind', CASE (qryCSDM.SDM_KIND,
                                                      ['0', 'mism_ResortGood',
                                                       '1', 'mism_MissedGood',
                                                       '2', 'mism_ExtraGood'
                                                      ]
                                                 ),
                                         'do1r:Stage', CASE (qryCSDM.SDM_STAGE,
                                                       ['0', 'mist_AtAcceptance',
                                                        '1', 'mist_AtKeeping'
                                                       ]
                                                  ),
                                         'do1r:Date', FDT ('YYYY-MM-DD', qryCSDM.SDM_DATETIME),
                                         'do1r:Time', FDT ('HH:NN:SS', qryCSDM.SDM_DATETIME)
    ); // XMLNodeSetValues (XmlAcceptanceGood, 'ShippingDocsMismatch', ...) //


    // разбиваем описание причин на много строк по 250 символов
    VAR ('sReasonsDescr', Memo, qryCSDM.SDM_REASONS);
    sReasonsDescr := TRIM(sReasonsDescr);
    VAR ('XmlSDM', Integer, XMLNODEFIND (XmlAcceptanceGood, 'do1r:ShippingDocsMismatch'));

    IF (LENGTH (sReasonsDescr) > 250,
        Block(
          XmlNodeSetValues (XmlAcceptanceGood, 'do1r:ShippingDocsMismatch',
                  'do1r:Reasons', IF (LENGTH (sReasonsDescr) <= 250, sReasonsDescr, COPY (sReasonsDescr, 1, 250));
          );
          While( Length(sReasonsDescr) > 0,
            Block(
              sReasonsDescr := DELETE (sReasonsDescr, 1, 250);
              IF (LENGTH (sReasonsDescr) > 0,
                XmlNodeSetValue (XMLNODEADDCHILD (XmlSDM, 'do1r:Reasons'),  IF (LENGTH (sReasonsDescr) <= 250, sReasonsDescr, COPY (sReasonsDescr, 1, 250)))
              );
            )
          );
        ),
        Block(
          XmlNodeSetValue (XMLNODEADDCHILD (XmlSDM, 'do1r:Reasons'),  sReasonsDescr);
        )
    ); // IF - //

    XMLNodeSetValues (XmlAcceptanceGood, 'do1r:ShippingDocsMismatch', 'do1r:GoodsTNVEDCode', qryCSDM.DOC_G33);

    // разбиваем описание на много строк по 150 символов
    VAR ('sGoodsDescr', Memo, qryCSDM.DOC_G312);
    sGoodsDescr := TRIM(sGoodsDescr);
    VAR ('XmlSDM', Integer, XMLNODEFIND (XmlAcceptanceGood, 'do1r:ShippingDocsMismatch'));

    IF (LENGTH (sGoodsDescr) > 0, //пустое описание не выгружаем совсем
      IF (LENGTH (sGoodsDescr) > 250,
        Block(
          XmlNodeSetValues (XmlAcceptanceGood, 'do1r:ShippingDocsMismatch',
                  'do1r:GoodsDescription', IF (LENGTH (sGoodsDescr) <= 150, sGoodsDescr, COPY (sGoodsDescr, 1, 150));
          );
          While( Length(sGoodsDescr) > 0,
            Block(
              sGoodsDescr := DELETE (sGoodsDescr, 1, 150);
              IF (LENGTH (sGoodsDescr) > 0,
                XmlNodeSetValue (XMLNODEADDCHILD (XmlSDM, 'do1r:GoodsDescription'),  IF (LENGTH (sGoodsDescr) <= 150, sGoodsDescr, COPY (sGoodsDescr, 1, 150)))
              );
            )
          );
        ),
        Block(
          XmlNodeSetValue (XMLNODEADDCHILD (XmlSDM, 'do1r:GoodsDescription'),  sGoodsDescr);
        )
      ); // IF - //
    );

    XMLNodeSetValues (XmlAcceptanceGood, 'do1r:ShippingDocsMismatch', 'do1r:InvoiceCost', qryCSDM.DOC_G42);
    XMLNodeSetValues (XmlAcceptanceGood, 'do1r:ShippingDocsMismatch', 'do1r:PlaceNumber', qryCSDM.DOC_G311);
    IF (FIELDISNULL ('qryCSDM', 'DOC_G315A')=0, XMLNodeSetValues (XmlAcceptanceGood, 'do1r:ShippingDocsMismatch', 'do1r:GoodsQuantity', qryCSDM.DOC_G315A));
    IF (FIELDISNULL ('qryCSDM', 'DOC_G315C')=0, XMLNodeSetValues (XmlAcceptanceGood, 'do1r:ShippingDocsMismatch', 'do1r:GoodsQuantity', qryCSDM.DOC_G315C));
    XMLNodeSetValues (XmlAcceptanceGood, 'do1r:ShippingDocsMismatch\do1r:BruttoVolQuant',
                                         'catWH_ru:GoodsQuantity', qryCSDM.DOC_G35,
                                         'catWH_ru:MeasureUnitQualifierName', 'КГ',
                                         'catWH_ru:MeasureUnitQualifierCode', '166'
    );


    // Сведения о коммерсческом акте/акте общей формы, описывающем
    // причины и характер выявленных несоответствий
    VAR ('slCommerceAct', Integer, STRINGLISTCREATE());
    VAR ('sAct', String, '');
    STRINGLISTSETTEXT (slCommerceAct, qryCSDM.COMMERCEACT);
    VAR ('iRowCount', Integer, STRINGLISTGETCOUNT(slCommerceAct));
    VAR ('i', Integer, 1);
    VAR ('XMLCommerceAct', Integer);

    WHILE (i <= iRowCount,
      Block(
        sAct := STRINGLISTGETITEM (slCommerceAct, (i-1));
        XMLCommerceAct := XMLNodeAddChild (XmlAcceptanceGood, 'do1r:ShippingDocsMismatch\do1r:CommerceAct');
        XMLNodeSetValues (XMLCommerceAct, '', 'cat_ru:PrDocumentName', EXTRACTSTR (sAct, 1, ','));
        XMLNodeSetValues (XMLCommerceAct, '', 'cat_ru:PrDocumentNumber', EXTRACTSTR (sAct, 2, ','));
        XMLNodeSetValues (XMLCommerceAct, '', 'cat_ru:PrDocumentDate', FDT ('YYYY-MM-DD', EXTRACTSTR (sAct, 3, ',')));
        i := i + 1;
      )
    ); // WHILE -  //

  )
),  // FUNC - WriteMismatch() //



IF ((KRD_MAIN.PART_MODE = 1),
  Block(
    VAR ('tmpPlaceID', String, KRD_MAIN.PLACEID);
    VAR ('tmpID', String, KRD_MAIN.MAIN_ID);

    //Обработка партий ДО1мв
    SETRANGE ('KRD_MAIN_3', [tmpPlaceID, tmpID]);
    FIRST ('KRD_MAIN_3');
    WHILE (EOF ('KRD_MAIN_3') = 0,
      Block(
        //IF (FINDKEY ('KRD_MAIN', [KRD_MAIN_3.PLACEID, KRD_MAIN_3.ID]),
        IF (LOCATE ('KRD_MAIN', 'PLACEID;ID', [KRD_MAIN_3.PLACEID, KRD_MAIN_3.ID]),
          Block(
            WriteBills(1);
          )
        );
        NEXT ('KRD_MAIN_3')
      )
    ); // WHILE - (KRD_MAIN.PART_MODE = 1) & (KRD_MAIN.A_MODE = 7) //
    CANCELRANGE ('KRD_MAIN_3');

    //Обработка партий ДО1мв
    SETRANGE ('KRD_MAIN_3', [tmpPlaceID, tmpID]);
    FIRST ('KRD_MAIN_3');
    WHILE (EOF ('KRD_MAIN_3') = 0,
      Block(
        //IF (FINDKEY ('KRD_MAIN', [KRD_MAIN_3.PLACEID, KRD_MAIN_3.ID]),
        IF (LOCATE ('KRD_MAIN', 'PLACEID;ID', [KRD_MAIN_3.PLACEID, KRD_MAIN_3.ID]),
          Block(
            WriteBills(2);
          )
        );
        NEXT ('KRD_MAIN_3')
      )
    ); // WHILE - (KRD_MAIN.PART_MODE = 1) & (KRD_MAIN.A_MODE = 7) //
    CANCELRANGE ('KRD_MAIN_3');

    //Обработка партий ДО1мв
    SETRANGE ('KRD_MAIN_3', [tmpPlaceID, tmpID]);
    FIRST ('KRD_MAIN_3');
    WHILE (EOF ('KRD_MAIN_3') = 0,
      Block(
        //IF (FINDKEY ('KRD_MAIN', [KRD_MAIN_3.PLACEID, KRD_MAIN_3.ID]),
        IF (LOCATE ('KRD_MAIN', 'PLACEID;ID', [KRD_MAIN_3.PLACEID, KRD_MAIN_3.ID]),
          Block(
            WriteBills(3);
          )
        );
        NEXT ('KRD_MAIN_3');
      )
    ); // WHILE - (KRD_MAIN.PART_MODE = 1) & (KRD_MAIN.A_MODE = 7) //
    CANCELRANGE ('KRD_MAIN_3');
  ),
  Block(
    WriteBills(0);
    //dCargoPlacesCount := KRD_MAIN.G06; вынесено в функцию
  )
); // IF - (KRD_MAIN.PART_MODE = 1) & (KRD_MAIN.A_MODE = 7) //

// Запись PresentedDocs (должен быть один раз - у нас в многопартийках писался после каждой партии)
WritePresentedDocs();


// освобождаем память
IF (bQContsOpened, CLOSEDATASET ('qConts'));

{
//
// DEBUG /*
writelog (dbg, 'do1_album.exp (end) ' + FDT ('SS', (Date()+Time(1)) - timerStart) + ' sec (' + INIFILE ('STSDB', 'Driver Name', '') + ')');
writelog (dbg, '');
// DEBUG */
//
}
