// *****************************************************************************
// Название: Загрузка уведомлений о выпуске товаров
// Описание: Загрузка уведомлений о выпуске товаров
// Кнопка вызова: 1
// Подпись кнопки: Загрузка уведомления о выпуске товаров
// *****************************************************************************
//

FUNC ('GOODOUT_READ', ,
Block(
  WHILE (iChildIndex <= iChildCount,
    Block(
      CASE (XMLNODENAME (XMLNODECHILD (XMLGoodOut, iChildIndex)),
           ['whgou:DeliveryGoods',
               Block(
                 XmlDelivery := XMLNODECHILD (XMLGoodOut, iChildIndex);
                 iChild2Count := XMLNODECHILDCOUNT (XmlDelivery);
                 iChild2Index := 0;
                 VAR ('XmlConsignee', Integer, XMLNODEFIND (XMLDelivery, 'whgou:Consignee'));
                 
                 OPENQUERY ('qryMAXID', ' SELECT MAX(JOURNAL_CHILD_ID) AS MAX_ID FROM DELIVERY WHERE JOURNAL_MASTER_ID=' + iJMID, 'dbJournals');
                 VAR('iJCID', Integer, qryMAXID.MAX_ID + 1);

                 APPENDRECORD ('DELIVERY_2');
                 EDIT ('DELIVERY_2');
                 {SETFIELDVALUE ('DELIVERY_2',
                                'JOURNAL_MASTER_ID', iJMID,
                                'JOURNAL_CHILD_ID', iJCID,
                                'JOURNAL_UUID',  GENERATEUUID (),
                                'OrganizationName',    XmlDelivery.Consignee.OrganizationName,
                                'OGRN',    XmlDelivery.Consignee.RFOrganizationFeatures.OGRN,
                                'INN',    XmlDelivery.Consignee.RFOrganizationFeatures.INN,
                                'KPP',    XmlDelivery.Consignee.RFOrganizationFeatures.KPP,
                                'PostalCode',    XmlDelivery.Consignee.Address.PostalCode,
                                'CountryCode',    XmlDelivery.Consignee.Address.CountryCode,
                                'CounryName',    XmlDelivery.Consignee.Address.CounryName,
                                'AddressLine',    XmlDelivery.Consignee.Address.AddressLine,
                                'IdentityCardName',    XmlDelivery.Consignee.IdentityCard.IdentityCardName,
                                'IdentityCardSeries',    XmlDelivery.Consignee.IdentityCard.IdentityCardSeries,
                                'IdentityCardNumber',    XmlDelivery.Consignee.IdentityCard.IdentityCardNumber,
                                'IdentityCardDate',    StrToDate (XmlDelivery.Consignee.IdentityCard.IdentityCardDate, 'YYYY-MM-DD', '-'),
                                'CardOrganizationName',    XmlDelivery.Consignee.IdentityCard.OrganizationName,
                 ); }
                 
                   
                 SETFIELDVALUE ('DELIVERY_2',
                                'JOURNAL_MASTER_ID', iJMID,
                                'JOURNAL_CHILD_ID', iJCID,
                                'JOURNAL_UUID',  GENERATEUUID (),
                                'OrganizationName', XMLNODEVALUE (XMLNODEFIND (XmlConsignee, 'cat_ru:OrganizationName')),
                                'OGRN', XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XmlConsignee, 'cat_ru:RFOrganizationFeatures'), 'cat_ru:OGRN')),
                                'INN',    XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XmlConsignee, 'cat_ru:RFOrganizationFeatures'), 'cat_ru:INN')),
                                'KPP',    XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XmlConsignee, 'cat_ru:RFOrganizationFeatures'), 'cat_ru:KPP')),
                                'PostalCode',    XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XmlConsignee, 'catWH_ru:Address'), 'cat_ru:PostalCode')),
                                'CountryCode',    XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XmlConsignee, 'catWH_ru:Address'), 'cat_ru:CountryCode')),
                                'CounryName',    XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XmlConsignee, 'catWH_ru:Address'), 'cat_ru:CounryName')),
                                'AddressLine',    XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XmlConsignee, 'catWH_ru:Address'), 'catWH_ru:AddressLine')),
                                'IdentityCardName',    XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XmlConsignee, 'catWH_ru:IdentityCard'), 'cat_ru:IdentityCardName')),
                                'IdentityCardSeries',    XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XmlConsignee, 'catWH_ru:IdentityCard'), 'cat_ru:IdentityCardSeries')),
                                'IdentityCardNumber',    XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XmlConsignee, 'catWH_ru:IdentityCard'), 'cat_ru:IdentityCardNumber')),
                                'IdentityCardDate',    StrToDate (XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XmlConsignee, 'catWH_ru:IdentityCard'), 'cat_ru:IdentityCardDate')), 'YYYY-MM-DD', '-'),
                                'CardOrganizationName',    XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XmlConsignee, 'catWH_ru:IdentityCard'), 'cat_ru:OrganizationName')),
                 ); // SETFIELDVALUE () //

                 POST ('DELIVERY_2');

                 Delivery_READ();
               )],
      ); // CASE - //
      iChildIndex := iChildIndex + 1;
    )
  ); // WHILE - //


)),

FUNC ('DELIVERY_READ', ,
Block(
  WHILE (iChild2Index <= iChild2Count,
    Block(
      CASE (XMLNODENAME (XMLNODECHILD (XMLDelivery, iChild2Index)),
           ['whgou:Transport',
               Block(
                 XmlTransport := XMLNODECHILD (XMLDelivery, iChild2Index);
                 VAR('XMLTransportModeCode', String, XMLNODEVALUE (XMLNODEFIND (XmlTransport, 'catWH_ru:TransportModeCode')));
                 
                 OPENQUERY ('qryMAXID', ' SELECT MAX(JOURNAL_CHILD_ID_2) AS MAX_ID FROM TRANSPORT WHERE JOURNAL_MASTER_ID=' + iJMID+' AND JOURNAL_CHILD_ID=' + iJCID , 'dbJournals');
                 VAR('iJCID2', Integer, qryMAXID.MAX_ID + 1);

                 APPENDRECORD ('TRANSPORT_2');
                 EDIT ('TRANSPORT_2');

                {SETFIELDVALUE ('TRANSPORT_2',
                                'JOURNAL_MASTER_ID', iJMID,
                                'JOURNAL_CHILD_ID', iJCID,
                                'JOURNAL_CHILD_ID_2', iJCID2,
                                'JOURNAL_UUID',  GENERATEUUID (),
                                'TransportModeCode',    XmlTransport.TransportModeCode,
                                'TransportIdentifier',    XmlTransport.TransportIdentifier,
                                'TrailerIdentifier',    IF (XmlTransport.TransportModeCode = '10', XmlTransport.Sea.EntryNumber,
                                                          IF (STRPOS (XmlTransport.TransportModeCode, '12|20')<>0, XmlTransport.RailRoad.RailStation,
                                                            IF (XmlTransport.TransportModeCode = '40', XmlTransport.Avia.FlightNumber,
                                                              IF (STRPOS (XmlTransport.TransportModeCode, '16|23|30|31|39|43|55')<>0, XmlTransport.Avto.TrailerIdentifier)))),
                                'SecondTrailerIdentifier', IF (STRPOS (XmlTransport.TransportModeCode, '16|23|30|31|39|43|55')<>0, XmlTransport.Avto.SecondTrailerIdentifier, ' '),
                                'CountryCode',    IF (XmlTransport.TransportModeCode = '10', XmlTransport.Sea.CountryCode),
                 );}
                 SETFIELDVALUE ('TRANSPORT_2',
                                'JOURNAL_MASTER_ID', iJMID,
                                'JOURNAL_CHILD_ID', iJCID,
                                'JOURNAL_CHILD_ID_2', iJCID2,
                                'JOURNAL_UUID',  GENERATEUUID (),
                                'TransportModeCode',   XMLTransportModeCode,
                                'TransportIdentifier', XMLNODEVALUE (XMLNODEFIND (XmlTransport, 'catWH_ru:TransportIdentifier')),
                                'TrailerIdentifier',    IF (XMLTransportModeCode = '10', XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XmlTransport, 'catWH_ru:Sea'), 'catWH_ru:EntryNumber')),
                                                          IF (STRPOS (XMLTransportModeCode, '12|20')<>0, XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XmlTransport, 'catWH_ru:RailRoad'), 'catWH_ru:RailStation')),
                                                            IF (XMLTransportModeCode = '40', XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XmlTransport, 'catWH_ru:Avia'), 'catWH_ru:FlightNumber')),
                                                              IF (STRPOS (XMLTransportModeCode, '16|23|30|31|39|43|55')<>0, XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XmlTransport, 'catWH_ru:Avto'), 'catWH_ru:TrailerIdentifier')))))),
                                'SecondTrailerIdentifier', IF (STRPOS (XMLTransportModeCode, '16|23|30|31|39|43|55')<>0, XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XmlTransport, 'catWH_ru:Avto'), 'catWH_ru:SecondTrailerIdentifier')), ' '),
                                'CountryCode',    IF (XMLTransportModeCode = '10', XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XmlTransport, 'catWH_ru:Sea'), 'catWH_ru:CountryCode'))),
                 ); // SETFIELDVALUE () //
                 
                 POST ('TRANSPORT_2');
               ),
            'whgou:GoodInfo',
               Block(
                 XmlGoodInfo := XMLNODECHILD (XMLDelivery, iChild2Index);
                 iChild3Count := XMLNODECHILDCOUNT (XmlGoodInfo);
                 iChild3Index := 0;
                 VAR ('sGoodsDescr', Memo, '');

                 OPENQUERY ('qryMAXID', ' SELECT MAX(JOURNAL_CHILD_ID_2) AS MAX_ID FROM GOODINFO WHERE JOURNAL_MASTER_ID=' + iJMID+' AND JOURNAL_CHILD_ID=' + iJCID , 'dbJournals');
                 VAR('iJCID2', Integer, qryMAXID.MAX_ID + 1);

                 APPENDRECORD ('GOODINFO_2');
                 EDIT ('GOODINFO_2');
                 {SETFIELDVALUE ('GOODINFO_2',
                                'JOURNAL_MASTER_ID', iJMID,
                                'JOURNAL_CHILD_ID', iJCID,
                                'JOURNAL_CHILD_ID_2', iJCID2,
                                'JOURNAL_UUID',  GENERATEUUID (),
                                'GoodsNumber',     XmlGoodInfo.GoodsNumber,
                                'GoodsTNVEDCode',  XmlGoodInfo.GoodsTNVEDCode,
                                'InvoiceCost',     XmlGoodInfo.InvoiceCost,
                                'CurrencyCode',    XmlGoodInfo.CurrencyCode,
                                'PlaceNumber',    XmlGoodInfo.CargoPlace.PlaceNumber,
                                'PackageCode',    XmlGoodInfo.CargoPlace.PackageCode,
                                'PlaceDescription',    XmlGoodInfo.CargoPlace.PlaceDescription,
                                'BruttoVolQuantity',    XmlGoodInfo.BruttoVolQuant.GoodsQuantity,
                                'BruttoVolName',    XmlGoodInfo.BruttoVolQuant.MeasureUnitQualifierName,
                                'BruttoVolCode',    XmlGoodInfo.BruttoVolQuant.MeasureUnitQualifierCode,
                                'MeasureQuantity',    XmlGoodInfo.MeasureQuantity.GoodsQuantity,
                                'MeasureName',    XmlGoodInfo.MeasureQuantity.MeasureUnitQualifierName,
                                'MeasureCode',    XmlGoodInfo.MeasureQuantity.MeasureUnitQualifierCode,
                 );}
                 vInvoiceCost :=  Convert(XMLNODEVALUE (XMLNODEFIND (XmlGoodInfo, 'catWH_ru:InvoiceCost')), Float);
                 vPlaceNumber :=  Convert(XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XmlGoodInfo, 'catWH_ru:CargoPlace'), 'catWH_ru:PlaceNumber')), Integer);
		 vBruttoVolQuantity :=  Convert(XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XmlGoodInfo, 'catWH_ru:BruttoVolQuant'), 'catWH_ru:GoodsQuantity')), Float);
		 vMeasureQuantity :=  Convert(XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XmlGoodInfo, 'catWH_ru:MeasureQuantity'), 'catWH_ru:GoodsQuantity')), Float);
                 vSumInvoiceCost := vSumInvoiceCost + vInvoiceCost;
                 vSumPlaceNumber := vSumPlaceNumber + vPlaceNumber;
                 vSumBruttoVolQuantity := vSumBruttoVolQuantity + vBruttoVolQuantity;
                 vSumMeasureQuantity := vSumMeasureQuantity + vMeasureQuantity;

                 SETFIELDVALUE ('GOODINFO_2',
                                'JOURNAL_MASTER_ID', iJMID,
                                'JOURNAL_CHILD_ID', iJCID,
                                'JOURNAL_CHILD_ID_2', iJCID2,
                                'JOURNAL_UUID',  GENERATEUUID (),
                                'GoodsNumber',     XMLNODEVALUE (XMLNODEFIND (XmlGoodInfo, 'catWH_ru:GoodsNumber')),
                                'GoodsTNVEDCode',  XMLNODEVALUE (XMLNODEFIND (XmlGoodInfo, 'catWH_ru:GoodsTNVEDCode')),
                                'InvoiceCost',     XMLNODEVALUE (XMLNODEFIND (XmlGoodInfo, 'catWH_ru:InvoiceCost')),
                                'CurrencyCode',    XMLNODEVALUE (XMLNODEFIND (XmlGoodInfo, 'catWH_ru:CurrencyCode')),
                                'PlaceNumber',     XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XmlGoodInfo, 'catWH_ru:CargoPlace'), 'catWH_ru:PlaceNumber')),
                                'PackageCode',     XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XmlGoodInfo, 'catWH_ru:CargoPlace'), 'catWH_ru:PackageCode')),
                                'PlaceDescription', XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XmlGoodInfo, 'catWH_ru:CargoPlace'), 'catWH_ru:PlaceDescription')),
                                'BruttoVolQuantity',  XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XmlGoodInfo, 'catWH_ru:BruttoVolQuant'), 'catWH_ru:GoodsQuantity')),
                                'BruttoVolName',    XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XmlGoodInfo, 'catWH_ru:BruttoVolQuant'), 'catWH_ru:MeasureUnitQualifierName')),
                                'BruttoVolCode',    XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XmlGoodInfo, 'catWH_ru:BruttoVolQuant'), 'catWH_ru:MeasureUnitQualifierCode')),
                                'MeasureQuantity',    XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XmlGoodInfo, 'catWH_ru:MeasureQuantity'), 'catWH_ru:GoodsQuantity')),
                                'MeasureName',    XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XmlGoodInfo, 'catWH_ru:MeasureQuantity'), 'catWH_ru:MeasureUnitQualifierName')),
                                'MeasureCode',    XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XmlGoodInfo, 'catWH_ru:MeasureQuantity'), 'catWH_ru:MeasureUnitQualifierCode')),
                 ); // SETFIELDVALUE () //
                 POST ('GOODINFO_2');
                 
                 GOODINFO_READ();
                 EDIT ('GOODINFO_2');
                 SETFIELDVALUE ('GOODINFO_2',
                                'GoodsDescription', sGoodsDescr
                 );
                 POST ('GOODINFO_2');
                 
               )],
      ); // CASE - //
      iChild2Index := iChild2Index + 1;
    )
  ); // WHILE - //

)),


FUNC ('GOODINFO_READ', ,
Block(
  WHILE (iChild3Index <= iChild3Count,
    Block(
      CASE (XMLNODENAME (XMLNODECHILD (XMLGOODInfo, iChild3Index)),
           ['catWH_ru:GoodsDescription',
               Block(
                 IF (sGoodsDescr = '',
                   sGoodsDescr := XmlNodeValue (XMLNODECHILD (XMLGOODInfo, iChild3Index)),
                   sGoodsDescr := sGoodsDescr + XmlNodeValue (XMLNODECHILD (XMLGOODInfo, iChild3Index))
                 ); // IF - sGoodsDescr = '' //
               ),
            'whgou:Container',
               Block(
                 XmlContainer := XMLNODECHILD (XMLGoodInfo, iChild3Index);

                 OPENQUERY ('qryMAXID', ' SELECT MAX(JOURNAL_CHILD_ID_3) AS MAX_ID FROM CONTAINER WHERE JOURNAL_MASTER_ID=' + iJMID+' AND JOURNAL_CHILD_ID=' + iJCID + ' AND JOURNAL_CHILD_ID_2=' + iJCID2 , 'dbJournals');
                 VAR('iJCID3', Integer, qryMAXID.MAX_ID + 1);

                 APPENDRECORD ('Container_2');
                 EDIT ('Container_2');
                 SETFIELDVALUE ('Container_2',
                                'JOURNAL_MASTER_ID', iJMID,
                                'JOURNAL_CHILD_ID', iJCID,
                                'JOURNAL_CHILD_ID_2', iJCID2,
                                'JOURNAL_CHILD_ID_3', iJCID3,
                                'JOURNAL_UUID',  GENERATEUUID (),
                                'ContainerNumber', XMLNODEVALUE (XMLNODEFIND (XmlContainer, 'catWH_ru:ContainerNumber')),
                                'GrossWeightQuantity', XMLNODEVALUE (XMLNODEFIND (XmlContainer, 'catWH_ru:GrossWeightQuantity')),
                 ); // SETFIELDVALUE () //

                 POST ('Container_2');
               ),
            'whgou:TransportDoc',
               Block(
                 XmlTransportDoc := XMLNODECHILD (XMLGoodInfo, iChild3Index);

                 OPENQUERY ('qryMAXID', ' SELECT MAX(JOURNAL_CHILD_ID_3) AS MAX_ID FROM TRANSPORTDOC WHERE JOURNAL_MASTER_ID=' + iJMID+' AND JOURNAL_CHILD_ID=' + iJCID + ' AND JOURNAL_CHILD_ID_2=' + iJCID2 , 'dbJournals');
                 VAR('iJCID3', Integer, qryMAXID.MAX_ID + 1);

                 APPENDRECORD ('TransportDoc_2');
                 EDIT ('TransportDoc_2');
                 SETFIELDVALUE ('TransportDoc_2',
                                'JOURNAL_MASTER_ID', iJMID,
                                'JOURNAL_CHILD_ID', iJCID,
                                'JOURNAL_CHILD_ID_2', iJCID2,
                                'JOURNAL_CHILD_ID_3', iJCID3,
                                'JOURNAL_UUID',  GENERATEUUID (),
                                'PrDocumentName',    XMLNODEVALUE (XMLNODEFIND (XmlTransportDoc, 'cat_ru:PrDocumentName')),
                                'PrDocumentNumber',  XMLNODEVALUE (XMLNODEFIND (XmlTransportDoc, 'cat_ru:PrDocumentNumber')),
                                'PrDocumentDate',    StrToDate (XMLNODEVALUE (XMLNODEFIND (XmlTransportDoc, 'cat_ru:PrDocumentDate')), 'YYYY-MM-DD', '-'),

                 ); // SETFIELDVALUE () //
                 POST ('TransportDoc_2');

               )],
      ); // CASE - //
      iChild3Index := iChild3Index + 1;
    )
  ); // WHILE - //

)),

///  начало скрипта
VAR ('sPath', String, '');
VAR ('iJMID', Integer, 0);

//IF (SELECTDIRECTORY ('sPath') = 0, RAISEEXCEPTION ('Отменено пользователем'));
//sPath := INCLUDETRAILINGBACKSLASH (sPath);

{
IF (SELECTFILE ('sPath', 'Выбор уведомления о выпуске', 'Xml-файлы (*.xml)|*.xml') = 0, RAISEEXCEPTION ('Отменено пользователем'));

VAR ('XmlDoc', Integer, XMLDOCUMENTCREATE());
XMLDOCUMENTLOAD (XmlDoc, sPath);

VAR ('XmlRoot', Integer, XMLDOCUMENTROOT (XmlDoc));
}

VAR ('XmlGoodOut', Integer, XMLNODECHILD (XmlRoot, 0));

VAR ('iChildIndex', Integer, 0);
VAR ('iChildCount', Integer, XMLNODECHILDCOUNT (XmlGoodOut));
VAR ('iChild2Index', Integer, 0);
VAR ('iChild2Count', Integer, 0);
VAR ('iChild3Index', Integer, 0);
VAR ('iChild3Count', Integer, 0);


VAR ('XmlDelivery', Integer);
VAR ('XmlTransport', Integer);
VAR ('XmlTransportDoc', Integer);
VAR ('XmlContainer', Integer);
VAR ('XmlGoodInfo', Integer);

VAR ('vSumInvoiceCost', Float);
VAR ('vInvoiceCost', Float);
VAR ('vSumPlaceNumber', Integer);
VAR ('vPlaceNumber', Integer);
VAR ('vSumBruttoVolQuantity', Float);
VAR ('vBruttoVolQuantity', Float);
VAR ('vSumMeasureQuantity', Float);
VAR ('vMeasureQuantity', Float);


OPENTABLE ('GOODOUT_2', 'JRGOODOUT', 'JOURNAL_MASTER_ID', 'dbJournals', 1);
OPENTABLE ('DELIVERY_2', 'DELIVERY', 'JOURNAL_MASTER_ID;JOURNAL_CHILD_ID', 'dbJournals', 1);

OPENTABLE ('GOODINFO_2', 'GOODINFO', 'JOURNAL_MASTER_ID;JOURNAL_CHILD_ID;JOURNAL_CHILD_ID_2', 'dbJournals', 1);
OPENTABLE ('TRANSPORT_2','TRANSPORT','JOURNAL_MASTER_ID;JOURNAL_CHILD_ID;JOURNAL_CHILD_ID_2', 'dbJournals', 1);

OPENTABLE ('CONTAINER_2','CONTAINER', 'JOURNAL_MASTER_ID;JOURNAL_CHILD_ID;JOURNAL_CHILD_ID_2;JOURNAL_CHILD_ID_3', 'dbJournals', 1);
OPENTABLE ('TRANSPORTDOC_2', 'TRANSPORTDOC', 'JOURNAL_MASTER_ID;JOURNAL_CHILD_ID;JOURNAL_CHILD_ID_2;JOURNAL_CHILD_ID_3', 'dbJournals', 1);

VAR ('sFilter', String, 'DOCUMENTID = ' +char(39)+ XMLNODEVALUE (XMLNODEFIND (XMLGoodOut, 'cat_ru:DocumentID')) +char(39) );

OPENQUERY ('qryInv', 'SELECT * FROM JRGOODOUT WHERE ' + sFilter, 'dbJournals');

VAR ('iRecCount', Integer, RECORDCOUNT ('qryInv', 1));

IF (iRecCount <= 0,
  Block(

    OPENQUERY ('qryMAXID', ' SELECT MAX(JOURNAL_MASTER_ID) AS MAX_ID FROM JRGOODOUT', 'dbJournals');
    VAR('iJMID', Integer, qryMAXID.MAX_ID + 1);

    APPENDRECORD ('GoodOut_2');
    EDIT ('GoodOut_2');
    SETFIELDVALUE ('GoodOut_2',
                   'JOURNAL_MASTER_ID', iJMID,
                   'DOCUMENTID',    XMLNODEVALUE (XMLNODEFIND (XMLGoodOut, 'cat_ru:DocumentID')),
                   'SendDate', StrToDate (XMLNODEVALUE (XMLNODECHILD (XMLGoodOut, 'whgou:SendDate')), 'YYYY-MM-DD', '-'),
                   'SendTime', XMLNODEVALUE (XMLNODEFIND (XMLGoodOut, 'whgou:SendTime')),
                   'Comments', XMLNODEVALUE (XMLNODEFIND (XMLGoodOut, 'whgou:Comments')),
                   'CustomsCode', XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XMLGoodOut, 'whgou:Customs'), 'cat_ru:Code')),
                   'CustomsName', XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XMLGoodOut, 'whgou:Customs'), 'cat_ru:OfficeName')),
                   'CustomsPerson', XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XMLGoodOut, 'whgou:CustomsPerson'), 'cat_ru:PersonName')),
                   'LNP', XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XMLGoodOut, 'whgou:CustomsPerson'), 'cat_ru:LNP')),
                   'PrDocumentName',    XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XMLGoodOut, 'whgou:ProduceDocuments'), 'cat_ru:PrDocumentName')),
                   'PrDocumentNumber',  XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XMLGoodOut, 'whgou:ProduceDocuments'), 'cat_ru:PrDocumentNumber')),
                   'PrDocumentDate',    StrToDate (XMLNODEVALUE (XMLNODEFIND (XMLNODEFIND (XMLGoodOut, 'whgou:ProduceDocuments'), 'cat_ru:PrDocumentDate')), 'YYYY-MM-DD', '-'),
    );
    {SETFIELDVALUE ('GoodOut_2',
                   'JOURNAL_MASTER_ID', iJMID,
                   'DOCUMENTID',    XMLGoodOut.DocumentID,
                   'SendDate', StrToDate (XMLGoodOut.SendDate, 'YYYY-MM-DD', '-'),
                   'SendTime', XMLGoodOut.SendTime,
                   'Comments', XMLGoodOut.Comments,
                   'CustomsCode', XMLGoodOut.Customs.Code,
                   'CustomsName', XMLGoodOut.Customs.OfficeName,
                   'CustomsPerson', XMLGoodOut.CustomsPerson.PersonName,
                   'LNP', XMLGoodOut.CustomsPerson.LNP,
                   'PrDocumentName',    XMLGoodOut.ProduceDocuments.PrDocumentName,
                   'PrDocumentNumber',  XMLGoodOut.ProduceDocuments.PrDocumentNumber,
                   'PrDocumentDate',    StrToDate (XMLGoodOut.ProduceDocuments.PrDocumentDate, 'YYYY-MM-DD', '-'),
    );}

    POST ('GoodOut_2');

    GOODOUT_READ();
    EDIT ('GoodOut_2');
    SETFIELDVALUE ('GoodOut_2',
                   'SumInvoiceCost', vSumInvoiceCost,
		   'SumPlaceNumber', vSumPlaceNumber,
		   'SumBruttoVolQuantity', vSumBruttoVolQuantity,
		   'SumMeasureQuantity', vSumMeasureQuantity,
    );
    POST ('GoodOut_2');

  )
);

CLOSEDATASET ('CONTAINER_2');
CLOSEDATASET ('TRANSPORTDOC_2');
CLOSEDATASET ('TRANSPORT_2');
CLOSEDATASET ('GoodInfo_2');
CLOSEDATASET ('DELIVERY_2');
CLOSEDATASET ('GoodOut_2');

